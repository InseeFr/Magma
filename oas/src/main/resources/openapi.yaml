openapi: 3.1.0
info:
  title: API RMéS
  description: API sur les métadonnées de l'Insee
  version: 3.7.2
externalDocs:
  description: 'This API is open source : the sources can be found there'
  url: https://github.com/InseeFr/Metadata-API
servers:
  - url: http://localhost:8080/metadata-api
tags:
  #  - name: nomenclatures
  #    description: Nomenclatures API
  #  - name: concepts
  #    description: Concepts API
  #  - name: operations
  #    description: Operations API
  - name: geoArrondissement
    description: 'API géographie : Arrondissement'
  - name: geoBassinDeVie
    description: 'API géographie : Bassin de vie 2022'
  - name: geoCanton
    description: 'API géographie : Canton'
  - name: geoCantonOuVille
    description: 'API géographie : Canton ou ville'
  - name: geoCirconscriptionTerritoriale
    description: 'API géographie : CirconscriptionTerritoriale'
  - name: geoCollectiviteDOutreMer
    description: 'API géographie : Collectivité d''outre-mer'
  - name: geoCommune
    description: 'API géographie : Commune'
  - name: geoCommuneAssociee
    description: 'API géographie : Commune associée'
  - name: geoCommuneDeleguee
    description: 'API géographie : Commune déléguée'
  - name: geoDepartement
    description: 'API géographie : Département'
  - name: geoDistrict
    description: 'API géographie : District'
  - name: geoIntercommunalite
    description: 'API géographie : Intercommunalité'
  - name: geoIris
    description: 'API géographie : Iris'
  - name: geoRegion
    description: 'API géographie : Région'
  - name: geoUniteUrbaine
    description: 'API géographie : Unité urbaine 2020'
  - name: geoZoneDEmploi
    description: 'API géographie : Zone d''emploi'
  - name: geo
    description: 'API géographie : Générique'
paths:

  /geo/arrondissement/{code}:
    get:
      tags:
        - geoArrondissement
      summary: 'Informations sur un arrondissement identifié par son code (trois ou quatre caractères)'
      operationId: 'getcogarr'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementInPath'
        - $ref: '#/components/parameters/dateArrondissementActif'
      responses:
        '200':
          $ref: '#/components/responses/Arrondissement200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/bassinDeVie2022/{code}:
    get:
      tags:
        - geoBassinDeVie
      summary: 'Informations sur un bassin de vie identifié par son code (neuf caractères)'
      operationId: 'getcogbass'
      parameters:
        - $ref: '#/components/parameters/codeBassinDeVieInPath'
        - $ref: '#/components/parameters/dateBassinDeVieActif'
      responses:
        '200':
          $ref: '#/components/responses/BassinDeVie200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/canton/{code}:
    get:
      tags:
        - geoCanton
      summary: 'Informations sur un canton identifié par son code (quatre chiffres pour la Métropole ou cinq chiffres pour les DOM ou 2A/2B plus 2 chiffres pour la Corse)'
      operationId: 'getcogcan'
      parameters:
        - $ref: '#/components/parameters/codeCantonInPath'
        - $ref: '#/components/parameters/dateCantonActif'
      responses:
        '200':
          $ref: '#/components/responses/Canton200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/cantonOuVille/{code}:
    get:
      tags:
        - geoCantonOuVille
      summary: 'Informations sur un canton-ou-ville identifié par son code (quatre chiffres pour la Métropole ou cinq pour les DOM)'
      operationId: 'getcogcanvil'
      parameters:
        - $ref: '#/components/parameters/codeCantonOuVilleInPath'
        - $ref: '#/components/parameters/dateCantonOuVilleActif'
      responses:
        '200':
          $ref: '#/components/responses/CantonOuVille200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/circonscriptionTerritoriale/{code}:
    get:
      tags:
        - geoCirconscriptionTerritoriale
      summary: 'Informations sur une circonscription territoriale identifiée par son code (cinq caractères)'
      operationId: 'getcogcir'
      parameters:
        - $ref: '#/components/parameters/codeCirconscriptionTerritorialeInPath'
        - $ref: '#/components/parameters/dateCirconscriptionTerritorialeActive'
      responses:
        '200':
          $ref: '#/components/responses/CirconscriptionTerritoriale200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/collectiviteDOutreMer/{code}:
    get:
      tags:
        - geoCollectiviteDOutreMer
      summary: 'Informations sur une collectivité d''outre-mer identifiée par son code (trois caractères)'
      operationId: 'getcogcoll'
      parameters:
        - $ref: '#/components/parameters/codeCollectiviteDOutreMerInPath'
        - $ref: '#/components/parameters/dateCollectiviteDOutreMerActive'
      responses:
        '200':
          $ref: '#/components/responses/CollectiviteDOutreMer200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/commune/{code}/ascendants:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les territoires qui contiennent la commune'
      operationId: 'getcogcomasc'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsCommune'
        - $ref: '#/components/parameters/typeTerritoireAscendantCommune'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  # utiliser responses.200.links.getcogcom.operationID : getcogcom
  /geo/commune/{code}:
    get:
      tags:
        - geoCommune
      summary: 'Informations sur une commune française identifiée par son code (cinq caractères)'
      operationId: getcogcom
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateActive'
      responses:
        '200':
          $ref: '#/components/responses/Commune200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/descendants:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les territoires inclus dans la commune'
      operationId: 'getcogcomdesc'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsCommune'
        - $ref: '#/components/parameters/typeTerritoireDescendantCommune'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/communes:
    get:
      tags:
        - geoCommune
      summary: Informations sur toutes les communes actives à la date donnée. Par défaut, c'est la date courante.
      operationId: 'getcogcomliste'
      parameters:
        - $ref: '#/components/parameters/dateCommunesActives'
        - $ref: '#/components/parameters/filtreNomCommune'
        - $ref: '#/components/parameters/com'
      responses:
        '200':
          $ref: '#/components/responses/CommunesListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/precedents:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les departements qui précèdent la commune'
      operationId: 'getcogcomprec'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateCommuneDepart'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/projetes:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les communes qui résultent de la projection de la commune à la date passée en paramètre.'
      operationId: 'getcogcomproj'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateCommuneDepart'
        - $ref: '#/components/parameters/dateProjectionCommuneInPath'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeProjetes200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/suivants:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les communes qui succèdent à la commune'
      operationId: 'getcogcomsuiv'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateCommuneSuivantInPath'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/communeAssociee/{code}:
    get:
      tags:
        - geoCommuneAssociee
      summary: 'Informations sur une commune associée identifiée par son code (cinq caractères)'
      operationId: 'getcogcoma'
      parameters:
        - $ref: '#/components/parameters/codeCommuneAssocieeInPath'
        - $ref: '#/components/parameters/dateCommuneAssocieeActive'
      responses:
        '200':
          $ref: '#/components/responses/CommuneAssociee200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/communeDeleguee/{code}:
    get:
      tags:
        - geoCommuneDeleguee
      summary: 'Informations sur une commune déléguée identifiée par son code (cinq caractères)'
      operationId: 'getcogcomd'
      parameters:
        - $ref: '#/components/parameters/codeCommuneDelegueeInPath'
        - $ref: '#/components/parameters/dateCommuneDelegueeActive'
      responses:
        '200':
          $ref: '#/components/responses/CommuneDeleguee200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'


  /geo/departement/{code}/ascendants:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les territoires qui contiennent le departement'
      operationId: 'getcogdepasc'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsDepartement'
        - $ref: '#/components/parameters/typeTerritoireAscendantDepartement'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}:
    get:
      tags:
        - geoDepartement
      summary: 'Informations sur un departement identifié par son code (deux ou trois caractères)'
      operationId: 'getcogdep'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementActif'
      responses:
        '200':
          $ref: '#/components/responses/Departement200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/departement/{code}/descendants:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les territoires inclus dans le departement'
      operationId: 'getcogdepdesc'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsDepartement'
        - $ref: '#/components/parameters/typeTerritoireDescendantDepartement'
        - $ref: '#/components/parameters/filtreNomDescendant'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departements:
    get:
      tags:
        - geoDepartement
      summary: 'Informations sur tous les départements actifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogdepts'
      parameters:
        - $ref: '#/components/parameters/dateDepartementsInPath'
      responses:
        '200':
          $ref: '#/components/responses/DepartementsListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}/precedents:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les departements qui précèdent le departement'
      operationId: 'getcogdepprec'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementDepart'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}/projetes:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les départements qui résultent de la projection du département à la date passée en paramètre.'
      operationId: 'getcogdepproj'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementDepart'
        - $ref: '#/components/parameters/dateProjectionInPath'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeProjetes200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}/suivants:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les départements qui succèdent au département'
      operationId: 'getcogdepsuiv'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementSuivantInPath'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'


  /geo/district/{code}:
    get:
      tags:
        - geoDistrict
      summary: 'Informations sur un district identifié par son code (cinq caractères)'
      operationId: 'getcogdis'
      parameters:
        - $ref: '#/components/parameters/codeDistrictInPath'
        - $ref: '#/components/parameters/dateDistrictActif'
      responses:
        '200':
          $ref: '#/components/responses/District200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/intercommunalite/{code}:
    get:
      tags:
        - geoIntercommunalite
      summary: 'Informations sur une intercommunalité identifiée par son code (neuf caractères)'
      operationId: 'getcoginterco'
      parameters:
        - $ref: '#/components/parameters/codeIntercommunaliteInPath'
        - $ref: '#/components/parameters/dateIntercommunaliteActive'
      responses:
        '200':
          $ref: '#/components/responses/Intercommunalite200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/iris/{code}:
    get:
      tags:
        - geoIris
      summary: 'Informations sur un Iris identifié par son code (neuf chiffres pour la métropole ou 2A/2B plus 7 chiffres pour la Corse)'
      operationId: 'getcogiris'
      parameters:
        - $ref: '#/components/parameters/codeIrisInPath'
        - $ref: '#/components/parameters/dateIrisActive'
      responses:
        '200':
          $ref: '#/components/responses/Iris200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/region/{code}:
    get:
      tags:
        - geoRegion
      summary: 'Informations sur une région identifiée par son code (deux chiffres)'
      operationId: 'getcogreg'
      parameters:
        - $ref: '#/components/parameters/codeRegInPath'
        - $ref: '#/components/parameters/dateRegionActive'
      responses:
        '200':
          $ref: '#/components/responses/Region200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/uniteUrbaine2020/{code}:
    get:
      tags:
        - geoUniteUrbaine
      summary: 'Informations sur une unité urbaine identifiée par son code (cinq chiffres ou 1 chiffre, 1 lettre et 3 chiffres)'
      operationId: 'getcoguu'
      parameters:
        - $ref: '#/components/parameters/codeUniteUrbaineInPath'
        - $ref: '#/components/parameters/dateUniteUrbaineActive'
      responses:
        '200':
          $ref: '#/components/responses/UniteUrbaine200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'





  /geo/zoneDEmploi2020/{code}:
    get:
      tags:
        - geoZoneDEmploi
      summary: 'Informations sur une zone d''emploi française identifiée par son code (quatre chiffres)'
      operationId: 'getcogze'
      parameters:
        - $ref: '#/components/parameters/codeZoneDEmploiInPath'
        - $ref: '#/components/parameters/dateZoneDEmploiActive'
      responses:
        '200':
          $ref: '#/components/responses/ZoneDEmploi200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  parameters:
    codeTerritoireInPath:
      name: 'code'
      in: path
      description: 'Code identifiant un territoire'
      required: true
      schema:
        type: string
    dateActive:
      in: query
      description: |-
        Filtre pour renvoyer la commune active à la date donnée. Par défaut, c'est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    dateProjectionInPath:
      required: true
      in: query
      description: |-
        Date vers laquelle est projeté le departement. Paramètre obligatoire (format : 'AAAA-MM-JJ')
      name: dateProjection
      schema:
        $ref: '#/components/schemas/Date1950ParDefaut'
    typeTerritoire:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnum'
    filtreNomDescendant:
      name: 'filtreNom'
      in: query
      description: 'Filtre sur le nom des territoires renvoyés'
      schema:
        type: string
        example: 'Dinan'
    codeDepInPath:
      name: 'code'
      in: path
      description: 'Code du département (deux ou trois caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeDep'
    dateDepartementActif:
      in: query
      description: |-
        Filtre pour renvoyer le département actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateDepartementsInPath:
      in: query
      description: |-
        Filtre pour renvoyer les départements actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsDepartement:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans le département actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsDepartement:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant le département actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantDepartement:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsDepartement'
    typeTerritoireAscendantDepartement:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsDepartement'
    dateDepartementDepart:
      in: query
      description: |-
        Filtre pour préciser le département de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateDepartementSuivantInPath:
      name: 'date'
      in: query
      description: |-
        Filtre pour préciser le département de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      schema:
        $ref: '#/components/schemas/Date1950ParDefaut'
    codeCommuneInPath:
      required: true
      name: code
      in: path
      description: 'Code de la commune (cinq caractères)'
      schema:
        $ref: '#/components/schemas/CodeCom'
    dateCommuneDepart:
      in: query
      description: |-
        Filtre pour préciser la commune de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCommuneSuivantInPath:
      name: 'date'
      in: query
      description: |-
        Filtre pour préciser la commune de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      schema:
        $ref: '#/components/schemas/Date1945ParDefaut'
    dateProjectionCommuneInPath:
      required: true
      in: query
      description: |-
        Date vers laquelle est projeté le departement. Paramètre obligatoire (format : 'AAAA-MM-JJ')
      name: dateProjection
      schema:
        $ref: '#/components/schemas/Date1945ParDefaut'
    dateTerritoiresActifsDescendantsCommune:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans la commune active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsCommune:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant la commune active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCommunesActives:
      in: query
      description: |-
        Filtre pour renvoyer les communes actives à la date donnée. Par défaut, c'est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantCommune:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsCommune'
    typeTerritoireAscendantCommune:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsCommune'
    filtreNomCommune:
      name: 'filtreNom'
      in: query
      description: 'Filtre sur le nom de la commune'
      schema:
        type: string
        example: 'Bonnay'
    com:
      name: 'com'
      in: 'query'
      description: |-
        Sélectionner "true" pour inclure les collectivités d'outre-mer
      schema:
        type: boolean
        example: false

    codeCommuneAssocieeInPath:
      name: 'code'
      in: path
      description: 'Code de la commune associée (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCommuneAssociee'
    dateCommuneAssocieeActive:
      in: query
      description: |-
        Filtre pour renvoyer la commune associée active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeCommuneDelegueeInPath:
      name: 'code'
      in: path
      description: 'Code de la commune déléguée (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCommuneDeleguee'
    dateCommuneDelegueeActive:
      in: query
      description: |-
        Filtre pour renvoyer la commune déléguée active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeDistrictInPath:
      name: 'code'
      in: path
      description: 'Code du district (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeDistrict'
    dateDistrictActif:
      in: query
      description: |-
        Filtre pour renvoyer le district actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    dateIntercommunaliteActive:
      in: query
      description: |-
        Filtre pour renvoyer l'intercommunalité active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    codeIntercommunaliteInPath:
      name: 'code'
      in: path
      description: 'Code de l''intercommunalité (neuf caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeInterco'
    dateIrisActive:
      in: query
      description: |-
        Filtre pour renvoyer l'Iris active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    codeIrisInPath:
      name: 'code'
      in: path
      description: 'Code Insee de l''Iris (neuf caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeIris'

    codeRegInPath:
      name: 'code'
      in: path
      description: 'Code de la région (deux chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeReg'
    dateRegionActive:
      in: query
      description: |-
        Filtre pour renvoyer la région active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeUniteUrbaineInPath:
      name: 'code'
      in: path
      description: 'Code de l''unité urbaine (cinq chiffres ou 1 chiffre, 1 lettre et 3 chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeUniteUrbaine'
    dateUniteUrbaineActive:
      in: query
      description: |-
        Filtre pour renvoyer l'unité urbaine active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeBassinDeVieInPath:
      name: 'code'
      in: path
      description: 'Code du bassin de vie (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeBassinDeVie'
    dateBassinDeVieActif:
      in: query
      description: |-
        Filtre pour renvoyer le bassin de vie actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeCantonInPath:
      name: 'code'
      in: path
      description: 'Code du canton (quatre chiffres pour la Métropole ou cinq chiffres pour les DOM ou 2A/2B plus 2 chiffres pour la Corse)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCanton'
    dateCantonActif:
      in: query
      description: |-
        Filtre pour renvoyer le canton actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeCantonOuVilleInPath:
      name: 'code'
      in: path
      description: 'Code du canton-ou-ville (quatre caractères, ou cinq pour les DOM, exemple : 97602)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCantonOuVille'
    dateCantonOuVilleActif:
      in: query
      description: |-
        Filtre pour renvoyer le canton-ou-ville actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeCirconscriptionTerritorialeInPath:
      name: 'code'
      in: path
      description: 'Code de la circonscription territoriale (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCirconscriptionTerritoriale'
    dateCirconscriptionTerritorialeActive:
      in: query
      description: |-
        Filtre pour renvoyer la circonscription territoriale active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeCollectiviteDOutreMerInPath:
      name: 'code'
      in: path
      description: 'Code de la collectivité d''outre-mer (trois caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCollectiviteDOutreMer'
    dateCollectiviteDOutreMerActive:
      in: query
      description: |-
        Filtre pour renvoyer la collectivité d'outre-mer à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeArrondissementInPath:
      name: 'code'
      in: path
      description: 'Code de l''arrondissement (trois ou quatre caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeArrondissement'
    dateArrondissementActif:
      in: query
      description: |-
        Filtre pour renvoyer l'arrondissement actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date

    codeZoneDEmploiInPath:
      name: 'code'
      in: path
      description: 'Code de la zone d''emploi (quatre chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeZoneDEmploi'
    dateZoneDEmploiActive:
      in: query
      description: |-
        Filtre pour renvoyer la zone d'emploi active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date


  examples:

    Arrondissement:
      value:
        code: '674'
        uri: 'http://id.insee.fr/geo/arrondissement/7f59df93-132b-400f-9aa6-b3c6be1018eb'
        type: 'Arrondissement'
        dateCreation: '2018-12-31'
        intituleSansArticle: 'Saverne'
        typeArticle: '0'
        chefLieu: '67437'
        intitule: 'Saverne'

    BassinDeVie2022:
      value:
        code: '01004'
        uri: 'http://id.insee.fr/geo/bassinDeVie2022/0e5bcc78-f043-404d-92af-d3d660772675'
        type: 'BassinDeVie2022'
        dateCreation: '2022-01-01'
        intituleSansArticle: 'Ambérieu-en-Bugey'
        typeArticle: '1'
        intitule: 'Ambérieu-en-Bugey'

    Canton:
      value:
        code: '0101'
        uri: 'http://id.insee.fr/geo/canton/f96a2438-478f-4ebb-b659-434305dff18f'
        type: 'Canton'
        dateCreation: '2016-01-01'
        chefLieu: '01004'
        intituleSansArticle: 'Ambérieu-en-Bugey'
        typeArticle: '1'
        intitule: 'Ambérieu-en-Bugey'

    CantonOuVille:
      value:
        code: '0101'
        uri: 'http://id.insee.fr/geo/cantonOuVille/5e75ead7-7564-4480-83b0-7e16a7d8acf7'
        type: 'CantonOuVille'
        dateCreation: '2016-01-01'
        chefLieu: '01004'
        intituleSansArticle: 'Ambérieu-en-Bugey'
        typeArticle: '1'
        intitule: 'Ambérieu-en-Bugey'

    CirconscriptionTerritoriale:
      value:
        code: '98611'
        uri: 'http://id.insee.fr/geo/circonscriptionTerritoriale/31f556e9-55e5-4e48-9dac-2d8113fa609e'
        type: 'CirconscriptionTerritoriale'
        dateCreation: '2008-01-01'
        intituleSansArticle: 'Alo'
        typeArticle: '1'
        intitule: 'Alo'

    CollectiviteDOutreMer:
      value:
        code: '988'
        uri: 'http://id.insee.fr/geo/collectiviteDOutreMer/bc93b612-59f5-463a-a05f-e5ed9013dc8d'
        type: 'CollectiviteDOutreMer'
        dateCreation: '2008-01-01'
        intituleSansArticle: 'Nouvelle-Calédonie'
        typeArticle: '0'
        intitule: 'Nouvelle-Calédonie'

    CommuneListeAscendants:
      value:
        - code: '024'
          uri: 'http://id.insee.fr/geo/aireDAttractionDesVilles2020/9d05148e-a733-4bc4-9223-e8a27618c7c0'
          type: 'AireDAttractionDesVilles2020'
          dateCreation: '2020-01-01'
          intituleSansArticle: 'Caen'
          typeArticle: '0'
          intitule: 'Caen'
        - code: '14752'
          uri: 'http://id.insee.fr/geo/bassinDeVie2022/a2f90771-4ff4-498e-9464-9cd75cdf2db7'
          type: 'BassinDeVie2022'
          dateCreation: '2022-01-01'
          intituleSansArticle: 'Villers-Bocage'
          typeArticle: '0'
          intitule: 'Villers-Bocage'
        - code: '1401'
          uri: 'http://id.insee.fr/geo/cantonOuVille/decd5410-bd2c-4561-b2c1-c1ef258fa3c0'
          type: 'CantonOuVille'
          dateCreation: '2021-02-26'
          intituleSansArticle: 'Monts d’Aunay'
          typeArticle: '4'
          intitule: 'Les Monts d’Aunay'
        - code: '1401'
          uri: 'http://id.insee.fr/geo/canton/25982682-5635-40ad-8040-09110edb43e1'
          type: 'Canton'
          dateCreation: '2021-02-26'
          chefLieu: '14027'
          intitule: 'Les Monts d’Aunay'
          intituleSansArticle: 'Monts d’Aunay'
          typeArticle: '4'
        - code: '14'
          uri: 'http://id.insee.fr/geo/departement/b01dce92-b91f-4648-80e7-536bd1823c2c'
          type: 'Departement'
          dateCreation: '2018-01-01'
          intituleSansArticle: 'Calvados'
          typeArticle: '2'
          chefLieu: '14118'
          intitule: 'Calvados'
        - code: '200069524'
          uri: 'http://id.insee.fr/geo/intercommunalite/208f94f5-28b8-421b-b153-e651cee0781f'
          type: 'Intercommunalite'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Pré-Bocage Intercom'
          typeArticle: 'X'
          intitule: 'Pré-Bocage Intercom'
        - code: '28'
          uri: 'http://id.insee.fr/geo/region/a7ac0f8e-d4d4-4ff2-9135-f0e0b6371aed'
          type: 'Region'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Normandie'
          typeArticle: '0'
          chefLieu: '76540'
          intitule: 'Normandie'
        - code: '2804'
          uri: 'http://id.insee.fr/geo/zoneDEmploi2020/4de3edd0-840a-437b-aa63-bba467c1a3ab'
          type: 'ZoneDEmploi2020'
          dateCreation: '2020-01-01'
          intituleSansArticle: 'Caen'
          typeArticle: '0'
          intitule: 'Caen'
    Commune:
      value:
        code: '14475'
        uri: 'http://id.insee.fr/geo/commune/4b88116a-9ede-42f5-aef5-a70304de593b'
        type: 'Commune'
        dateCreation: '2017-01-01'
        intituleSansArticle: 'Val d''Arry'
        typeArticle: '0'
        intitule: 'Val d''Arry'
    CommuneListeDescendants:
      value:
        - code: '14373'
          uri: 'http://id.insee.fr/geo/communeDeleguee/33afe07c-f132-4cdd-a188-4500c6928e62'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Locheur'
          typeArticle: '2'
          intitule: 'Le Locheur'
        - code: '14432'
          uri: 'http://id.insee.fr/geo/communeDeleguee/92b6f5a8-2766-4561-88f2-d7958529c488'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Missy'
          typeArticle: '0'
          intitule: 'Missy'
        - code: '14475'
          uri: 'http://id.insee.fr/geo/communeDeleguee/75df6d90-905e-428f-a410-d3e56f2683f2'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Noyers-Bocage'
          typeArticle: '0'
          intitule: 'Noyers-Bocage'
        - code: '14702'
          uri: 'http://id.insee.fr/geo/communeDeleguee/2a818192-2ffb-4955-b45d-a34f38753e87'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Tournay-sur-Odon'
          typeArticle: '0'
          intitule: 'Tournay-sur-Odon'
    CommunesListe:
      value:
        - code: '25073'
          uri: 'http://id.insee.fr/geo/commune/2ac33139-2a97-4b09-87b3-263cbf14c0b6'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Bonnay'
          typeArticle: '0'
          intitule: 'Bonnay'
        - code: '71042'
          uri: 'http://id.insee.fr/geo/commune/2ee9b3c8-9861-40a0-af5e-f84ce2f2b3bc'
          type: 'Commune'
          dateCreation: '2023-01-01'
          intituleSansArticle: 'Bonnay-Saint-Ythaire'
          typeArticle: '0'
          intitule: 'Bonnay-Saint-Ythaire'
        - code: '80112'
          uri: 'http://id.insee.fr/geo/commune/98c861ac-6da4-4f18-ba45-665bae059c5f'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Bonnay'
          typeArticle: '0'
          intitule: 'Bonnay'
    CommuneListePrecedents:
      value:
        - code: '14373'
          uri: 'http://id.insee.fr/geo/commune/9b9298ba-d31f-4570-82f1-ad821704a413'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Locheur'
          typeArticle: '2'
          intitule: 'Le Locheur'
        - code: '14475'
          uri: 'http://id.insee.fr/geo/commune/871d067a-a559-419c-a881-3602bb9fc7a1'
          type: 'Commune'
          dateCreation: '2016-01-01'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Noyers-Missy'
          typeArticle: '0'
          intitule: 'Noyers-Missy'
        - code: '14702'
          uri: 'http://id.insee.fr/geo/commune/69441f11-d773-46d7-838b-ac22102415d1'
          type: 'Commune'
          dateCreation: '1957-04-13'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Tournay-sur-Odon'
          typeArticle: '0'
          intitule: 'Tournay-sur-Odon'
    CommuneListeProjetes:
      value:
        - code: '14373'
          uri: 'http://id.insee.fr/geo/commune/9b9298ba-d31f-4570-82f1-ad821704a413'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Locheur'
          typeArticle: '2'
          intitule: 'Le Locheur'
        - code: '14432'
          uri: 'http://id.insee.fr/geo/commune/3a20a2ae-553b-4700-8009-e18fe26e0038'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '2016-01-01'
          intituleSansArticle: 'Missy'
          typeArticle: '0'
          intitule: 'Missy'
        - code: '14475'
          uri: 'http://id.insee.fr/geo/commune/95745cb6-90c1-4207-a45c-6c4cef0a7db4'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '1958-10-13'
          intituleSansArticle: 'Noyers'
          typeArticle: '0'
          intitule: 'Noyers'
        - code: '14702'
          uri: 'http://id.insee.fr/geo/commune/5ff04633-e954-446d-b5aa-f49027b4b6b6'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '1957-04-13-01-01'
          intituleSansArticle: 'Tournay'
          typeArticle: '0'
          intitule: 'Tournay'
    CommuneListeSuivants:
      value:
        - code: '14475'
          uri: 'http://id.insee.fr/geo/commune/c2e2d19d-1ace-4cdc-b80d-c37a1aa59d1e'
          type: 'Commune'
          dateCreation: '1958-10-13'
          dateSuppression: '2016-01-01'
          intituleSansArticle: 'Noyers-Bocage'
          typeArticle: '0'
          intitule: 'Noyers-Bocage'

    CommuneAssociee:
      value:
        - code: '59355'
          uri: 'http://id.insee.fr/geo/communeAssociee/84564ad2-a211-4744-9e01-1bb1900e2e68'
          type: 'CommuneAssociee'
          dateCreation: '2000-02-27'
          intituleSansArticle: 'Lomme'
          typeArticle: '0'
          intitule: 'Lomme'

    CommuneDeleguee:
      value:
        - code: '46248'
          uri: 'http://id.insee.fr/geo/communeDeleguee/c333331f-b09b-4253-b012-dc0d0a65a290'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Sainte-Alauzie'
          typeArticle: '0'
          intitule: 'Sainte-Alauzie'

    DepartementListeAscendants:
      value:
        - code: '53'
          uri: 'http://id.insee.fr/geo/region/6c83500c-454c-4d69-aec5-b988fb6f6f1c'
          type: 'Region'
          dateCreation: '2019-01-01'
          intituleSansArticle: 'Bretagne'
          typeArticle: '0'
          chefLieu: '35238'
          intitule: 'Bretagne'
    Departement:
      value:
        code: '22'
        uri: 'http://id.insee.fr/geo/departement/f07f6a49-9dce-4f2d-a99e-5d61eedf2827'
        type: 'Departement'
        dateCreation: '1990-03-08'
        intituleSansArticle: 'Côtes-d''Armor'
        typeArticle: '4'
        chefLieu: '22278'
        intitule: 'Côtes-d''Armor'
    DepartementListeDescendants:
      value:
        - code: '221'
          uri: 'http://id.insee.fr/geo/arrondissement/1e07b989-b3ff-43be-bfe6-05e9c9ba19d7'
          type: 'Arrondissement'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Dinan'
          typeArticle: '0'
          chefLieu: '22050'
          intitule: 'Dinan'
        - code: '222'
          uri: 'http://id.insee.fr/geo/arrondissement/87fdca9c-f9ed-41e5-93d9-f44534ffd725'
          type: 'Arrondissement'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Guingamp'
          typeArticle: '0'
          chefLieu: '22070'
          intitule: 'Guingamp'
    DepartementsListe:
      value:
        - code: '01'
          uri: 'http://id.insee.fr/geo/departement/84680e6f-2e99-44c9-a9ba-2e96a2ae48b7'
          type: 'Departement'
          dateCreation: '1967-12-31'
          intituleSansArticle: 'Ain'
          typeArticle: '5'
          chefLieu: '01053'
          intitule: 'Ain'
        - code: '02'
          uri: 'http://id.insee.fr/geo/departement/8b195d1f-8676-4c06-873c-ee5b6d66a23f'
          type: 'Departement'
          dateCreation: '2016-12-31'
          intituleSansArticle: 'Aisne'
          typeArticle: '5'
          chefLieu: '02408'
          intitule: 'Aisne'
    DepartementListePrecedents:
      value:
        - code: '22'
          uri: 'http://id.insee.fr/geo/departement/95af7065-d100-4c4f-afd5-764edfe9ae9b'
          type: 'Departement'
          dateCreation: '1943-01-01'
          dateSuppression: '1990-03-08'
          intituleSansArticle: 'Côtes-du-Nord'
          typeArticle: '4'
          chefLieu: '22278'
          intitule: 'Côtes-du-Nord'
    DepartementListeProjetes:
      value:
        - code: '22'
          uri: 'http://id.insee.fr/geo/departement/95af7065-d100-4c4f-afd5-764edfe9ae9b'
          type: 'Departement'
          dateCreation: '1943-01-01'
          dateSuppression: '1990-03-08'
          intituleSansArticle: 'Côtes-du-Nord'
          typeArticle: '4'
          chefLieu: '22278'
          intitule: 'Côtes-du-Nord'
    DepartementListeSuivants:
      value:
        - code: '22'
          uri: 'http://id.insee.fr/geo/departement/f07f6a49-9dce-4f2d-a99e-5d61eedf2827'
          type: 'Departement'
          dateCreation: '1990-03-08'
          intituleSansArticle: 'Côtes-d''Armor'
          typeArticle': '4'
          chefLieu: '22278'
          intitule: 'Côtes-d''Armor'

    District:
      value:
        - code: '98411'
          uri: 'http://id.insee.fr/geo/district/d028b78a-9c4d-4e22-9b60-efffd7085eb0'
          type: 'District'
          dateCreation: '2008-01-01'
          intituleSansArticle: 'Îles Saint-Paul et Amsterdam'
          typeArticle: '4'
          intitule: 'Îles Saint-Paul et Amsterdam'

    Intercommunalite:
      value:
        - code: '240100883'
          uri: 'http://id.insee.fr/geo/intercommunalite/5a238840-5cbd-469f-80c8-43713bf8e4a8'
          type: 'Intercommunalite'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Plaine de l''Ain'
          typeArticle: '3'
          intituleComplet: 'Communauté de communes de La Plaine de l''Ain'
          categorieJuridique: Communauté de communes'
          intitule: 'La Plaine de l''Ain'

    Iris:
      value:
        - code: '010040101'
          uri: 'http://id.insee.fr/geo/iris/b8c772de-9551-4f13-81c5-eca5bb0f2f7d'
          type': 'Iris'
          dateCreation: '2008-01-01'
          typeDIris: 'H'
          intitule: 'Les Pérouses-Triangle d''Activités'
          intituleSansArticle: 'Pérouses-Triangle d''Activités'
          typeArticle: '4'

    Region:
      value:
        code: '06'
        uri: 'http://id.insee.fr/geo/region/0e9f9adc-742d-4ab7-90bd-30e5aaf7b2ab'
        type: 'Region'
        dateCreation: '2011-03-31'
        intituleSansArticle: 'Mayotte'
        typeArticle: '0'
        chefLieu: '97611'
        intitule: 'Mayotte'

    UniteUrbaine2020:
      value:
        code: '01121'
        uri: 'http://id.insee.fr/geo/uniteUrbaine2020/57a37c9b-e426-430e-b8c1-ac0fd640e345'
        type: 'UniteUrbaine2020'
        dateCreation: '2020-10-01'
        intituleSansArticle: 'Jujurieux'
        typeArticle: '0'
        intitule: 'Jujurieux'





    ZoneDEmploi2020:
      value:
        code: '2415'
        uri: 'http://id.insee.fr/geo/zoneDEmploi2020/dbab03e7-3d8d-4797-8ab1-0ed36a4db9c1'
        type: 'ZoneDEmploi2020'
        dateCreation: '2020-01-01'
        intituleSansArticle: 'Vierzon'
        typeArticle: '0'
        intitule: 'Vierzon'

  responses:
    IncorrectRequest:
      description: 'La syntaxe de la requête est incorrecte'
    NotFound:
      description: 'Ressource non trouvée'
    NotAcceptable:
      description: 'L''en-tête HTTP ''Accept'' contient une valeur non acceptée'
    ServerError:
      description: 'Erreur interne du serveur'

    Arrondissement200:
      description: 'Opération réussie pour l''arrondissement'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Arrondissement'
          examples:
            défaut:
              $ref: '#/components/examples/Arrondissement'
        application/xml:
          schema:
            $ref: '#/components/schemas/Arrondissement'
          examples:
            défaut:
              $ref: '#/components/examples/Arrondissement'

    BassinDeVie200:
      description: 'Opération réussie pour le bassin de vie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BassinDeVie2022'
          examples:
            défaut:
              $ref: '#/components/examples/BassinDeVie2022'
        application/xml:
          schema:
            $ref: '#/components/schemas/BassinDeVie2022'
          examples:
            défaut:
              $ref: '#/components/examples/BassinDeVie2022'

    Canton200:
      description: 'Opération réussie pour le canton'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Canton'
          examples:
            défaut:
              $ref: '#/components/examples/Canton'
        application/xml:
          schema:
            $ref: '#/components/schemas/Canton'
          examples:
            défaut:
              $ref: '#/components/examples/Canton'

    CantonOuVille200:
      description: 'Opération réussie pour le canton-ou-ville'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonOuVille'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVille'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonOuVille'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVille'

    CirconscriptionTerritoriale200:
      description: 'Opération réussie pour la circonscription territoriale'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CirconscriptionTerritoriale'
          examples:
            défaut:
              $ref: '#/components/examples/CirconscriptionTerritoriale'
        application/xml:
          schema:
            $ref: '#/components/schemas/CirconscriptionTerritoriale'
          examples:
            défaut:
              $ref: '#/components/examples/CirconscriptionTerritoriale'

    CollectiviteDOutreMer200:
      description: 'Opération réussie pour la collectivité d''outre-mer'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectiviteDOutreMer'
          examples:
            défaut:
              $ref: '#/components/examples/CollectiviteDOutreMer'
        application/xml:
          schema:
            $ref: '#/components/schemas/CollectiviteDOutreMer'
          examples:
            défaut:
              $ref: '#/components/examples/CollectiviteDOutreMer'

    CommunesListe200:
      description: 'Opération réussie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommunesListe'
          examples:
            défaut:
              $ref: '#/components/examples/CommunesListe'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommunesListe'
          examples:
            défaut:
              $ref: '#/components/examples/CommunesListe'
    Commune200:
      description: 'Opération réussie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Commune'
          examples:
            défaut:
              $ref: '#/components/examples/Commune'
        application/xml:
          schema:
            $ref: '#/components/schemas/Commune'
          examples:
            défaut:
              $ref: '#/components/examples/Commune'
    CommuneListePrecedents200:
      description: 'Opération réussie pour les communes précédentes'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListePrecedents'
    CommuneListeProjetes200:
      description: 'Opération réussie pour les projetés d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeProjetes'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeProjetes'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeProjetes'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeProjetes'
    CommuneListeSuivants200:
      description: 'Opération réussie pour les successeurs d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeSuivants'
    CommuneListeDescendants200:
      description: 'Opération réussie pour les descendants d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeDescendants'

    CommuneListeAscendants200:
      description: 'Opération réussie pour les ascendants d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeAscendants'

    CommuneAssociee200:
      description: 'Opération réussie pour la commune associée'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneAssociee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneAssociee'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneAssociee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneAssociee'
    CommuneDeleguee200:
      description: 'Opération réussie pour la commune déléguée'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneDeleguee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneDeleguee'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneDeleguee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneDeleguee'

    DepartementListeSuivants200:
      description: 'Opération réussie pour les successeurs d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeSuivantsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeSuivantsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeSuivants'
    DepartementListeProjetes200:
      description: 'Opération réussie pour les projetés d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeProjetesAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeProjetes'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeProjetesAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeProjetes'
    DepartementListePrecedents200:
      description: 'Opération réussie pour les départements précédents'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListePrecedentsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListePrecedentsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListePrecedents'
    DepartementListeDescendants200:
      description: 'Opération réussie pour les descendants d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeDescendants'
    DepartementListeAscendants200:
      description: 'Opération réussie pour les ascendants d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeAscendants'
    DepartementsListe200:
      description: 'Opération réussie pour la liste des départements'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeTerritoiresAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementsListe'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeTerritoiresAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementsListe'
    Departement200:
      description: 'Opération réussie pour le département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Departement'
          examples:
            défaut:
              $ref: '#/components/examples/Departement'
        application/xml:
          schema:
            $ref: '#/components/schemas/Departement'
          examples:
            défaut:
              $ref: '#/components/examples/Departement'

    District200:
      description: 'Opération réussie pour le district'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/District'
          examples:
            défaut:
              $ref: '#/components/examples/District'
        application/xml:
          schema:
            $ref: '#/components/schemas/District'
          examples:
            défaut:
              $ref: '#/components/examples/District'

    Intercommunalite200:
      description: 'Opération réussie pour l''intercommunalité'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Intercommunalite'
          examples:
            défaut:
              $ref: '#/components/examples/Intercommunalite'
        application/xml:
          schema:
            $ref: '#/components/schemas/Intercommunalite'
          examples:
            défaut:
              $ref: '#/components/examples/Intercommunalite'

    Iris200:
      description: 'Opération réussie pour l''Iris'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Iris'
          examples:
            défaut:
              $ref: '#/components/examples/Iris'
        application/xml:
          schema:
            $ref: '#/components/schemas/Iris'
          examples:
            défaut:
              $ref: '#/components/examples/Iris'

    Region200:
      description: 'Opération réussie pour la région'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
          examples:
            défaut:
              $ref: '#/components/examples/Region'
        application/xml:
          schema:
            $ref: '#/components/schemas/Region'
          examples:
            défaut:
              $ref: '#/components/examples/Region'

    UniteUrbaine200:
      description: 'Opération réussie pour l''unité urbaine'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniteUrbaine2020'
          examples:
            défaut:
              $ref: '#/components/examples/UniteUrbaine2020'
        application/xml:
          schema:
            $ref: '#/components/schemas/UniteUrbaine2020'
          examples:
            défaut:
              $ref: '#/components/examples/UniteUrbaine2020'

    ZoneDEmploi200:
      description: 'Opération réussie pour la zone d''emploi'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ZoneDEmploi2020'
          examples:
            défaut:
              $ref: '#/components/examples/ZoneDEmploi2020'
        application/xml:
          schema:
            $ref: '#/components/schemas/ZoneDEmploi2020'
          examples:
            défaut:
              $ref: '#/components/examples/ZoneDEmploi2020'


  schemas:
    Commune:
      xml:
        name: Commune
      allOf:
        - $ref: '#/components/schemas/TerritoireBase'
      properties:
        code:
          $ref: '#/components/schemas/CodeCom'
    Departement:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Departement
          properties:
            code:
              $ref: '#/components/schemas/CodeDep'
    TerritoireBase:
      required:
        - code
        - uri
        - type
        - dateCreation
        - dateSuppression
        - intituleSansArticle
        - typeArticle
        - intitule
      xml:
        name: TerritoireBase
      properties:
        code:
          type: string
        uri:
          type: string
          pattern: uri
          xml:
            attribute: true
        type:
          type: string
          $ref: '#/components/schemas/TypeEnum'
        dateCreation:
          type: string
          description: 'Date de création du territoire s''il n''existait pas au premier COG du 1er janvier 1943'
          format: date
          xml:
            name: DateCreation
        dateSuppression:
          type: string
          description: 'Date de suppression du territoire'
          format: date
          xml:
            name: DateSuppression
        intituleSansArticle:
          xml:
            name: IntituleSansArticle
          type: string
        typeArticle:
          xml:
            name: TypeArticle
          type: string
          enum:
            - 0:
                article:
                charniere: 'De'
            - 1:
                article:
                charniere: 'D'''
            - 2:
                article: 'Le'
                charniere: 'Du'
            - 3:
                article: 'La'
                charniere: 'De La'
            - 4:
                article: 'Les'
                charniere: 'Des'
            - 5:
                article: 'L'''
                charniere: 'De L'''
            - 6:
                article: 'Aux'
                charniere: 'Des'
            - 7:
                article: 'Las'
                charniere: 'De Las'
            - 8:
                article: 'Los'
                charniere: 'De Los'
            - X:
                article:
                charniere:
        intitule:
          type: string
          xml:
            name: Intitule
    TerritoireBase_ChefLieu:
      xml:
        wrapped: true
        name: TerritoireBase_AvecChefLieu
      allOf:
        - $ref: '#/components/schemas/TerritoireBase'
        - type: object
          required:
            - chefLieu
          properties:
            chefLieu:
              type: string
              description: 'Chef-lieu du territoire'
              xml:
                name: ChefLieu
    Territoire_TousAttributs:
      xml:
        wrapped: true
        name: TerritoireBase_AvecTousLesAttributsPossibles
      allOf:
        - $ref: '#/components/schemas/TerritoireBase'
        - type: object
          required:
            - chefLieu
            - typeDIris
            - categorieJuridique
            - intituleComplet
            - inclusion
          properties:
            chefLieu:
              type: string
              description: 'Chef-lieu du territoire'
              xml:
                name: ChefLieu
            typeDIris:
              type: string
              description: 'Type d''iris'
              xml:
                name: typeDIris
            categorieJuridique:
              type: string
              description: 'Catégorie juridique du territoire'
              xml:
                name: categorieJuridique
            intituleComplet:
              type: string
              description: 'Intitulé complet du territoire'
              xml:
                name: intituleComplet
            inclusion:
              type: string
              description: 'Inclusion'
              xml:
                name: inclusion

    DepartementListeDescendants:
      description: 'Liste des descendants d''un département'
      type: array
      xml:
        wrapped: true
        name: DescendantsDepartement
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    DepartementListeAscendants:
      description: 'Liste des ascendants d''un département'
      type: array
      xml:
        wrapped: true
        name: AscendantsDepartement
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    DepartementListeProjetesAvecChefLieu:
      description: 'Liste des départements projetés'
      type: array
      xml:
        wrapped: true
        name: ListeDepartementsProjetes
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'
    DepartementListePrecedentsAvecChefLieu:
      description: 'Liste des départements précédents'
      type: array
      xml:
        wrapped: true
        name: ListeDepartementsPrecedents
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'
    DepartementListeSuivantsAvecChefLieu:
      description: 'Liste des départements qui succèdent au département'
      type: array
      xml:
        wrapped: true
        name: ListeDepartementsSuivants
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'
    ListeTerritoiresAvecChefLieu:
      description: 'Liste de territoires décrits avec chef-lieu'
      type: array
      xml:
        wrapped: true
        name: ListeTerritoiresChefLieu
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'
    TerritoireRef:
      xml:
        name: TerritoireRef
      type: object
      required:
        - code
        - territoireType
      description: 'Références vers un territoire de n''importe quel type'
      properties:
        code:
          type: string
          description: 'Code identifiant un teritoire quelqconque'
        territoireType:
          $ref: '#/components/schemas/TypeEnum'
    CodeCom:
      pattern: '[0-9][0-9AB][0-9]{3}'
      type: 'string'
      xml:
        attribute: true
      example: '14475'
    CodeDep:
      description: 'Code d''un département'
      pattern: '([013-8][0-9])|(2[0-9AB])|(9[0-5])|(97[1-6])'
      type: string
      xml:
        attribute: true
      example: '22'
    CommunesListe:
      description: 'Liste de communes'
      type: array
      xml:
        wrapped: true
        name: Communes
      items:
        $ref: '#/components/schemas/TerritoireBase'
    CommuneListeDescendants:
      description: 'Liste des descendants d''une commune'
      type: array
      xml:
        wrapped: true
        name: DescendantsCommune
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CommuneListeAscendants:
      description: 'Liste des ascendants d''une commune'
      type: array
      xml:
        wrapped: true
        name: AscendantsCommune
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CommuneListePrecedents:
      description: 'Liste des communes précédentes'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesPrecedentes
      items:
        $ref: '#/components/schemas/TerritoireBase'
    CommuneListeProjetes:
      description: 'Liste des communes projetées'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesProjetees
      items:
        $ref: '#/components/schemas/TerritoireBase'
    CommuneListeSuivants:
      description: 'Liste des communes qui succèdent à la commune'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesSuivants
      items:
        $ref: '#/components/schemas/TerritoireBase'
    Date1950ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '1950-01-01'
    Date1945ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '1945-06-26'
    TypeEnum:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Canton
        - CantonOuVille
        - Arrondissement
        - ArrondissementMunicipal
        - Departement
        - Region
        - Intercommunalite
        - District
        - AireDAttractionDesVilles2020
        - BassinDeVie2022
        - CollectiviteDOutreMer
        - CirconscriptionTerritoriale
        - Iris
        - ZoneDEmploi2020
        - UniteUrbaine2020
      example: 'Canton'
    TypeEnumDescendantsDepartement:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - Arrondissement
        - ArrondissementMunicipal
      example: 'Arrondissement'
    TypeEnumAscendantsDepartement:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
      example: 'Region'
    TypeEnumDescendantsCommune:
      type: string
      xml:
        name: 'Type'
      enum:
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - ArrondissementMunicipal
      example: 'Arrondissement'
    TypeEnumAscendantsCommune:
      type: string
      xml:
        name: 'Type'
      enum:
        - Departement
        - Region
        - Arrondissement
        - CollectiviteDOutreMer
      example: 'Departement'

    Arrondissement:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Arrondissement
          properties:
            code:
              $ref: '#/components/schemas/CodeArrondissement'
    CodeArrondissement:
      description: 'Code d''un arrondissement'
      pattern: '[a-zA-Z0-9]{3,4}'
      type: string
      xml:
        attribute: true
      example: '674'

    CommuneAssociee:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: CommuneAssociee
          properties:
            code:
              $ref: '#/components/schemas/CodeCommuneAssociee'

    CommuneDeleguee:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: CommuneDeleguee
          properties:
            code:
              $ref: '#/components/schemas/CodeCommuneDeleguee'

    CodeCommuneAssociee:
      description: 'Code de la commune associée'
      pattern: '([0-9]{5})'
      type: string
      xml:
        attribute: true
      example: '14463'

    CodeCommuneDeleguee:
     description: 'Code de la commune déléguée'
     pattern: '([0-9]{5})'
     type: string
     xml:
       attribute: true
     example: '46248'

    District:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: District
          properties:
            code:
              $ref: '#/components/schemas/CodeDistrict'
    CodeDistrict:
      description: 'Code du district'
      pattern: '([0-9]{5})'
      type: string
      xml:
        attribute: true
      example: '98411'

    Intercommunalite:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Intercommunalite
          properties:
            code:
              $ref: '#/components/schemas/CodeInterco'
    CodeInterco:
      description: 'Code d''une intercommunalité'
      pattern: '([0-9]{9})'
      type: string
      xml:
        attribute: true
      example: '240100883'

    CodeIris:
      description: 'Code d''une Iris'
      pattern: '([0-9]{9})'
      type: string
      xml:
        attribute: true
      example: '010040101'

    Iris:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Iris
          properties:
            code:
              $ref: '#/components/schemas/CodeIris'


    Region:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Region
          properties:
            code:
              $ref: '#/components/schemas/CodeReg'
    CodeReg:
      description: 'Code d''une région'
      pattern: '^(01|02|03|04|06|11|24|27|28|32|44|52|53|75|76|84|93|94)$'
      type: string
      xml:
        attribute: true
      example: '06'

    UniteUrbaine2020:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: UniteUrbaine
          properties:
            code:
              $ref: '#/components/schemas/CodeUniteUrbaine'
    CodeUniteUrbaine:
      description: 'Code d''une unité urbaine'
      pattern: '^([0-9][0-9A-Z][0-9]{3})$'
      type: string
      xml:
        attribute: true
      example: '01121'

    BassinDeVie2022:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Canton
          properties:
            code:
              $ref: '#/components/schemas/CodeBassinDeVie'
    CodeBassinDeVie:
      description: 'Code d''un bassin de vie'
      pattern: '[a-zA-Z0-9]{5}'
      type: string
      xml:
        attribute: true
      example: '01004'

    Canton:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Canton
          properties:
            code:
              $ref: '#/components/schemas/CodeCanton'
    CodeCanton:
      description: 'Code d''un canton'
      pattern: '[0-9]{4}|[0-9]{5}|2[ABab][0-9]{2}'
      type: string
      xml:
        attribute: true
      example: '0101'

    CantonOuVille:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Canton
          properties:
            code:
              $ref: '#/components/schemas/CodeCantonOuVille'
    CodeCantonOuVille:
      description: 'Code d''un canton-ou-ville'
      pattern: '[0-9]{4,5}'
      type: string
      xml:
        attribute: true
      example: '0101'

    CirconscriptionTerritoriale:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Circonscription territoriale
          properties:
            code:
              $ref: '#/components/schemas/CodeCirconscriptionTerritoriale'
    CodeCirconscriptionTerritoriale:
      description: 'Code d''une circonscription territoriale'
      pattern: '[a-zA-Z0-9]{5}'
      type: string
      xml:
        attribute: true
      example: '98611'

    CollectiviteDOutreMer:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: CollectiviteDOutreMer
          properties:
            code:
              $ref: '#/components/schemas/CodeCollectiviteDOutreMer'
    CodeCollectiviteDOutreMer:
      description: 'Code d''une collectivité d''outre-mer'
      pattern: '[a-zA-Z0-9]{3}'
      type: string
      xml:
        attribute: true
      example: '988'

    ZoneDEmploi2020:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: ZoneDEmploi
          properties:
            code:
              $ref: '#/components/schemas/CodeZoneDEmploi'
    CodeZoneDEmploi:
      description: 'Code d''une zone d''emploi'
      pattern: '[0-9]{4}'
      type: string
      xml:
        attribute: true
      example: '2415'