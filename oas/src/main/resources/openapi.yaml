openapi: 3.1.0
info:
  title: API RMéS
  description: API sur les métadonnées de l'Insee
  version: 3.7.2
externalDocs:
  description: 'This API is open source : the sources can be found there'
  url: https://github.com/InseeFr/Metadata-API
servers:
  - url: http://localhost:8080/metadata-api
tags:
  #  - name: nomenclatures
  #    description: Nomenclatures API
  #  - name: concepts
  #    description: Concepts API
  #  - name: operations
  #    description: Operations API
  - name: geoAireDAttractionDesVilles
    description: 'API géographie : aire d''attraction des villes 2020'
  - name: geoArrondissement
    description: 'API géographie : Arrondissement'
  - name: geoArrondissementMunicipal
    description: 'API géographie : Arrondissement municipal'
  - name: geoBassinDeVie
    description: 'API géographie : Bassin de vie 2022'
  - name: geoCanton
    description: 'API géographie : Canton'
  - name: geoCantonEtVille
    description: 'API géographie : Canton ou ville'
  - name: geoCirconscriptionTerritoriale
    description: 'API géographie : CirconscriptionTerritoriale'
  - name: geoCollectiviteDOutreMer
    description: 'API géographie : Collectivité d''outre-mer'
  - name: geoCommune
    description: 'API géographie : Commune'
  - name: geoCommuneAssociee
    description: 'API géographie : Commune associée'
  - name: geoCommuneDeleguee
    description: 'API géographie : Commune déléguée'
  - name: geoDepartement
    description: 'API géographie : Département'
  - name: geoDistrict
    description: 'API géographie : District'
  - name: geoIntercommunalite
    description: 'API géographie : Intercommunalité'
  - name: geoIris
    description: 'API géographie : Iris'
  - name: geoPays
    description: 'API géographie : Pays'
  - name: geoRegion
    description: 'API géographie : Région'
  - name: geoUniteUrbaine
    description: 'API géographie : Unité urbaine 2020'
  - name: geoZoneDEmploi
    description: 'API géographie : Zone d''emploi'
  - name: geo
    description: 'API géographie : Générique'

paths:

  /geo/aireDAttractionDesVilles2020/{code}:
    get:
      tags:
        - geoAireDAttractionDesVilles
      summary: 'Informations sur une aire d''attraction française identifiée par son code (trois caractères)'
      operationId: 'getcogaav'
      parameters:
        - $ref: '#/components/parameters/codeAireDAttractionDesVillesInPath'
        - $ref: '#/components/parameters/dateAireDAttractionDesVillesActive'
      responses:
        '200':
          $ref: '#/components/responses/AireDAttractionDesVilles200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/aireDAttractionDesVilles2020/{code}/descendants:
    get:
      tags:
        - geoAireDAttractionDesVilles
      summary: 'Informations concernant les territoires inclus dans l''aire d''attraction'
      operationId: 'getcogaavdesc'
      parameters:
        - $ref: '#/components/parameters/codeAireDAttractionDesVillesInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsAireDAttractionDesVilles'
        - $ref: '#/components/parameters/typeTerritoireDescendantAireDAttractionDesVilles'
      responses:
        '200':
          $ref: '#/components/responses/AireDAttractionDesVillesListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/airesDAttractionDesVilles2020:
    get:
      tags:
        - geoAireDAttractionDesVilles
      summary: 'Informations sur toutes les aires d''attraction actives à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogaavliste'
      parameters:
        - $ref: '#/components/parameters/dateAiresDAttractionDesVillesActives'
      responses:
        '200':
          $ref: '#/components/responses/AiresDAttractionDesVillesListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/arrondissement/{code}/ascendants:
    get:
      tags:
        - geoArrondissement
      summary: 'Informations concernant les territoires qui contiennent l''arrondissement'
      operationId: 'getcogarrasc'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsArrondissement'
        - $ref: '#/components/parameters/typeTerritoireAscendantArrondissement'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissement/{code}:
    get:
      tags:
        - geoArrondissement
      summary: 'Informations sur un arrondissement identifié par son code (trois ou quatre caractères)'
      operationId: 'getcogarr'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementInPath'
        - $ref: '#/components/parameters/dateArrondissementActif'
      responses:
        '200':
          $ref: '#/components/responses/Arrondissement200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissement/{code}/descendants:
    get:
      tags:
        - geoArrondissement
      summary: 'Informations concernant les territoires inclus dans l''arrondissement'
      operationId: 'getcogarrdes'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsArrondissement'
        - $ref: '#/components/parameters/typeTerritoireDescendantArrondissement'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissements:
    get:
      tags:
        - geoArrondissement
      summary: 'Informations sur tous les arrondissements atifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogarrliste'
      parameters:
        - $ref: '#/components/parameters/dateArrondissementsActifs'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementsListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissement/{code}/precedents:
    get:
      tags:
        - geoArrondissement
      summary: 'Informations concernant les arrondissements qui précèdent l''arrondissement'
      operationId: 'getcogarrprec'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementInPath'
        - $ref: '#/components/parameters/dateArrondissementDepart'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissement/{code}/suivants:
    get:
      tags:
        - geoArrondissement
      summary: 'Informations concernant les arrondissements qui succèdent à l''arrondissement'
      operationId: 'getcogarrsuiv'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementSuivantInPath'
        - $ref: '#/components/parameters/dateArrondissementSuivantInPath'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/arrondissementMunicipal/{code}/ascendants:
    get:
      tags:
        - geoArrondissementMunicipal
      summary: 'Informations concernant les territoires qui contiennent l''arrondissement municipal'
      operationId: 'getcogarrmuasc'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementMunicipalInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsArrondissementMunicipal'
        - $ref: '#/components/parameters/typeTerritoireAscendantArrondissementMunicipal'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementMunicipalListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissementMunicipal/{code}:
    get:
      tags:
        - geoArrondissementMunicipal
      summary: 'Informations sur un arrondissement municipal identifié par son code (cinq caractères)'
      operationId: 'getcogarrmu'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementMunicipalInPath'
        - $ref: '#/components/parameters/dateArrondissementMunicipalActif'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementMunicipal200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissementsMunicipaux:
    get:
      tags:
        - geoArrondissementMunicipal
      summary: 'Informations sur tous les arrondissements municipaux actifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogarrmuliste'
      parameters:
        - $ref: '#/components/parameters/dateArrondissementsMunicipauxActifs'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementsMunicipauxListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissementMunicipal/{code}/precedents:
    get:
      tags:
        - geoArrondissementMunicipal
      summary: 'Informations concernant les arrondissements municipaux qui précèdent l''arrondissement municipal'
      operationId: 'getcogarrmuprec'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementMunicipalInPath'
        - $ref: '#/components/parameters/dateArrondissementMunicipalDepart'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementMunicipalListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/arrondissementMunicipal/{code}/suivants:
    get:
      tags:
        - geoArrondissementMunicipal
      summary: 'Informations concernant les arrondissements municipaux qui succèdent à l''arrondissement municipal'
      operationId: 'getcogarrmusuiv'
      parameters:
        - $ref: '#/components/parameters/codeArrondissementMunicipalInPath'
        - $ref: '#/components/parameters/dateArrondissementMunicipalSuivantDepart'
      responses:
        '200':
          $ref: '#/components/responses/ArrondissementMunicipalListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'


  /geo/bassinDeVie2022/{code}:
    get:
      tags:
        - geoBassinDeVie
      summary: 'Informations sur un bassin de vie identifié par son code (neuf caractères)'
      operationId: 'getcogbass'
      parameters:
        - $ref: '#/components/parameters/codeBassinDeVieInPath'
        - $ref: '#/components/parameters/dateBassinDeVieActif'
      responses:
        '200':
          $ref: '#/components/responses/BassinDeVie200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/bassinDeVie2022/{code}/descendants:
    get:
      tags:
        - geoBassinDeVie
      summary: 'Informations concernant les territoires inclus dans le bassin de vie'
      operationId: 'getcogbassdes'
      parameters:
        - $ref: '#/components/parameters/codeBassinDeVieInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsBassinDeVie'
        - $ref: '#/components/parameters/typeTerritoireDescendantBassinDeVie'
      responses:
        '200':
          $ref: '#/components/responses/BassinDeVieListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/bassinsDeVie2022:
    get:
      tags:
        - geoBassinDeVie
      summary: 'Informations sur tous les bassins de vie actifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogbassliste'
      parameters:
        - $ref: '#/components/parameters/dateBassinsDeVieActifs'
        - $ref: '#/components/parameters/filtreNomBassinDeVie'
      responses:
        '200':
          $ref: '#/components/responses/BassinsDeVieListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/canton/{code}/ascendants:
    get:
      tags:
        - geoCanton
      summary: 'Informations concernant les territoires qui contiennent le canton'
      operationId: 'getcogcanasc'
      parameters:
        - $ref: '#/components/parameters/codeCantonInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsCanton'
        - $ref: '#/components/parameters/typeTerritoireAscendantCanton'
      responses:
        '200':
          $ref: '#/components/responses/CantonListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/canton/{code}:
    get:
      tags:
        - geoCanton
      summary: 'Informations sur un canton identifié par son code (quatre chiffres pour la Métropole ou cinq chiffres pour les DOM ou 2A/2B plus 2 chiffres pour la Corse)'
      operationId: 'getcogcan'
      parameters:
        - $ref: '#/components/parameters/codeCantonInPath'
        - $ref: '#/components/parameters/dateCantonActif'
      responses:
        '200':
          $ref: '#/components/responses/Canton200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/cantons:
    get:
      tags:
        - geoCanton
      summary: 'Informations sur tous les cantons actifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogcanliste'
      parameters:
        - $ref: '#/components/parameters/dateCantonsActifs'
      responses:
        '200':
          $ref: '#/components/responses/CantonsListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/canton/{code}/precedents:
    get:
      tags:
        - geoCanton
      summary: 'Informations concernant les cantons qui précèdent le canton'
      operationId: 'getcogcanprec'
      parameters:
        - $ref: '#/components/parameters/codeCantonPrecInPath'
        - $ref: '#/components/parameters/dateCantonDepart'
      responses:
        '200':
          $ref: '#/components/responses/CantonListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/canton/{code}/suivants:
    get:
      tags:
        - geoCanton
      summary: 'Informations concernant les cantons qui succèdent au canton'
      operationId: 'getcogcansuiv'
      parameters:
        - $ref: '#/components/parameters/codeCantonPrecInPath'
        - $ref: '#/components/parameters/dateCantonSuivantDepart'
      responses:
        '200':
          $ref: '#/components/responses/CantonListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/cantonOuVille/{code}/ascendants:
    get:
      tags:
        - geoCantonEtVille
      summary: 'Informations concernant les territoires qui contiennent le canton-ou-ville'
      operationId: 'getcogcanvilasc'
      parameters:
        - $ref: '#/components/parameters/codeCantonOuVilleInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsCantonOuVille'
        - $ref: '#/components/parameters/typeTerritoireAscendantCantonOuVille'
      responses:
        '200':
          $ref: '#/components/responses/CantonOuVilleListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/cantonOuVille/{code}:
    get:
      tags:
        - geoCantonEtVille
      summary: 'Informations sur un canton-ou-ville identifié par son code (quatre chiffres pour la Métropole ou cinq pour les DOM)'
      operationId: 'getcogcanvil'
      parameters:
        - $ref: '#/components/parameters/codeCantonOuVilleInPath'
        - $ref: '#/components/parameters/dateCantonOuVilleActif'
      responses:
        '200':
          $ref: '#/components/responses/CantonOuVille200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/cantonOuVille/{code}/descendants:
    get:
      tags:
        - geoCantonEtVille
      summary: 'Informations concernant les territoires inclus dans le canton-ou-ville'
      operationId: 'getcogcanvildes'
      parameters:
        - $ref: '#/components/parameters/codeCantonOuVilleInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsCantonOuVille'
        - $ref: '#/components/parameters/typeTerritoireDescendantCantonOuVille'
        - $ref: '#/components/parameters/filtreNomDescendant'
      responses:
        '200':
          $ref: '#/components/responses/CantonOuVilleListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/cantonsEtVilles:
    get:
      tags:
        - geoCantonEtVille
      summary: 'Informations sur tous les cantons et villes actifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogcanvilliste'
      parameters:
        - $ref: '#/components/parameters/dateCantonsEtVillesActifs'
      responses:
        '200':
          $ref: '#/components/responses/CantonsEtVilles200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/cantonOuVille/{code}/precedents:
    get:
      tags:
        - geoCantonEtVille
      summary: 'Informations concernant les cantons-ou-villes qui précèdent le canton-ou-ville'
      operationId: 'getcogcanvilprec'
      parameters:
        - $ref: '#/components/parameters/codeCantonOuVillePrecInPath'
        - $ref: '#/components/parameters/dateCantouOuVilleDepart'
      responses:
        '200':
          $ref: '#/components/responses/CantonOuVilleListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/cantonOuVille/{code}/suivants:
    get:
      tags:
        - geoCantonEtVille
      summary: 'Informations concernant les cantons-ou-villes qui succèdent au canton-ou-ville'
      operationId: 'getcogcanvilsuiv'
      parameters:
        - $ref: '#/components/parameters/codeCantonOuVilleSuivantInPath'
        - $ref: '#/components/parameters/dateCantonOuVilleSuivantInPath'
      responses:
        '200':
          $ref: '#/components/responses/CantonOuVilleListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'


  /geo/circonscriptionTerritoriale/{code}/ascendants:
    get:
      tags:
        - geoCirconscriptionTerritoriale
      summary: 'Informations concernant les territoires qui contiennent la circonscription territoriale'
      operationId: 'getcogcirasc'
      parameters:
        - $ref: '#/components/parameters/codeCirconscriptionTerritorialeInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsCirconscriptionTerritoriale'
        - $ref: '#/components/parameters/typeTerritoireAscendantCirconscriptionTerritoriale'
      responses:
        '200':
          $ref: '#/components/responses/CirconscriptionTerritorialeListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/circonscriptionTerritoriale/{code}:
    get:
      tags:
        - geoCirconscriptionTerritoriale
      summary: 'Informations sur une circonscription territoriale identifiée par son code (cinq caractères)'
      operationId: 'getcogcir'
      parameters:
        - $ref: '#/components/parameters/codeCirconscriptionTerritorialeInPath'
        - $ref: '#/components/parameters/dateCirconscriptionTerritorialeActive'
      responses:
        '200':
          $ref: '#/components/responses/CirconscriptionTerritoriale200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/collectiviteDOutreMer/{code}:
    get:
      tags:
        - geoCollectiviteDOutreMer
      summary: 'Informations sur une collectivité d''outre-mer identifiée par son code (trois caractères)'
      operationId: 'getcogcoll'
      parameters:
        - $ref: '#/components/parameters/codeCollectiviteDOutreMerInPath'
        - $ref: '#/components/parameters/dateCollectiviteDOutreMerActive'
      responses:
        '200':
          $ref: '#/components/responses/CollectiviteDOutreMer200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/collectiviteDOutreMer/{code}/descendants:
    get:
      tags:
        - geoCollectiviteDOutreMer
      summary: 'Informations concernant les territoires inclus dans la collectivité d''outre-mer'
      operationId: 'getcogcolldes'
      parameters:
        - $ref: '#/components/parameters/codeCollectiviteDOutreMerInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsCollectiviteDOutreMer'
        - $ref: '#/components/parameters/typeTerritoireDescendantCollectiviteDOutreMer'
        - $ref: '#/components/parameters/filtreNomDescendant'
      responses:
        '200':
          $ref: '#/components/responses/CollectiviteDOutreMerListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/collectivitesDOutreMer:
    get:
      tags:
        - geoCollectiviteDOutreMer
      summary: 'Informations sur toutes les collectivités d''outre-mer actives à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogcollliste'
      parameters:
        - $ref: '#/components/parameters/dateCollectivitesDOutreMerActives'
      responses:
        '200':
          $ref: '#/components/responses/CollectivitesDOutreMerListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/commune/{code}/ascendants:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les territoires qui contiennent la commune'
      operationId: 'getcogcomasc'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsCommune'
        - $ref: '#/components/parameters/typeTerritoireAscendantCommune'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  # utiliser responses.200.links.getcogcom.operationID : getcogcom
  /geo/commune/{code}:
    get:
      tags:
        - geoCommune
      summary: 'Informations sur une commune française identifiée par son code (cinq caractères)'
      operationId: getcogcom
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateActive'
      responses:
        '200':
          $ref: '#/components/responses/Commune200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/descendants:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les territoires inclus dans la commune'
      operationId: 'getcogcomdesc'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsCommune'
        - $ref: '#/components/parameters/typeTerritoireDescendantCommune'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/communes:
    get:
      tags:
        - geoCommune
      summary: Informations sur toutes les communes actives à la date donnée. Par défaut, c'est la date courante.
      operationId: 'getcogcomliste'
      parameters:
        - $ref: '#/components/parameters/dateCommunesActives'
        - $ref: '#/components/parameters/filtreNomCommune'
        - $ref: '#/components/parameters/com'
      responses:
        '200':
          $ref: '#/components/responses/CommunesListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/precedents:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les departements qui précèdent la commune'
      operationId: 'getcogcomprec'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateCommuneDepart'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/projetes:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les communes qui résultent de la projection de la commune à la date passée en paramètre.'
      operationId: 'getcogcomproj'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateCommuneDepart'
        - $ref: '#/components/parameters/dateProjectionCommuneInPath'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeProjetes200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/commune/{code}/suivants:
    get:
      tags:
        - geoCommune
      summary: 'Informations concernant les communes qui succèdent à la commune'
      operationId: 'getcogcomsuiv'
      parameters:
        - $ref: '#/components/parameters/codeCommuneInPath'
        - $ref: '#/components/parameters/dateCommuneSuivantInPath'
      responses:
        '200':
          $ref: '#/components/responses/CommuneListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/communeAssociee/{code}/ascendants:
    get:
      tags:
        - geoCommuneAssociee
      summary: 'Informations concernant les territoires qui contiennent la commune associée'
      operationId: 'getcogcomaasc'
      parameters:
        - $ref: '#/components/parameters/codeCommuneAssocieeInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsCommuneAssociee'
        - $ref: '#/components/parameters/typeTerritoireAscendantCommuneAssociee'
      responses:
        '200':
          $ref: '#/components/responses/CommuneAssocieeListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/communeAssociee/{code}:
    get:
      tags:
        - geoCommuneAssociee
      summary: 'Informations sur une commune associée identifiée par son code (cinq caractères)'
      operationId: 'getcogcoma'
      parameters:
        - $ref: '#/components/parameters/codeCommuneAssocieeInPath'
        - $ref: '#/components/parameters/dateCommuneAssocieeActive'
      responses:
        '200':
          $ref: '#/components/responses/CommuneAssociee200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/communesAssociees:
    get:
      tags:
        - geoCommuneAssociee
      summary: 'Informations sur toutes les communes associées actives à la date donnée. Par défaut, c''est la date courante.'
      operationId: 'getcogcomaliste'
      parameters:
        - $ref: '#/components/parameters/dateCommunesAssocieesActives'
      responses:
        '200':
          $ref: '#/components/responses/CommunesAssocieesListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/communeDeleguee/{code}/ascendants:
    get:
      tags:
        - geoCommuneDeleguee
      summary: 'Informations concernant les territoires qui contiennent la commune déléguée'
      operationId: 'getcogcomdasc'
      parameters:
        - $ref: '#/components/parameters/codeCommuneDelegueeInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsCommuneDeleguee'
        - $ref: '#/components/parameters/typeTerritoireAscendantCommuneDeleguee'
      responses:
        '200':
          $ref: '#/components/responses/CommuneDelegueeListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/communeDeleguee/{code}:
    get:
      tags:
        - geoCommuneDeleguee
      summary: 'Informations sur une commune déléguée identifiée par son code (cinq caractères)'
      operationId: 'getcogcomd'
      parameters:
        - $ref: '#/components/parameters/codeCommuneDelegueeInPath'
        - $ref: '#/components/parameters/dateCommuneDelegueeActive'
      responses:
        '200':
          $ref: '#/components/responses/CommuneDeleguee200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/communesDeleguees:
    get:
      tags:
        - geoCommuneDeleguee
      summary: 'Informations sur toutes les communes déléguées actives à la date donnée. Par défaut, c''est la date courante.'
      operationId: 'getcogcomdliste'
      parameters:
        - $ref: '#/components/parameters/dateCommunesDelegueesActives'
      responses:
        '200':
          $ref: '#/components/responses/CommunesDelegueesListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'


  /geo/departement/{code}/ascendants:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les territoires qui contiennent le departement'
      operationId: 'getcogdepasc'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsDepartement'
        - $ref: '#/components/parameters/typeTerritoireAscendantDepartement'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}:
    get:
      tags:
        - geoDepartement
      summary: 'Informations sur un departement identifié par son code (deux ou trois caractères)'
      operationId: 'getcogdep'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementActif'
      responses:
        '200':
          $ref: '#/components/responses/Departement200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}/descendants:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les territoires inclus dans le departement'
      operationId: 'getcogdepdesc'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsDepartement'
        - $ref: '#/components/parameters/typeTerritoireDescendantDepartement'
        - $ref: '#/components/parameters/filtreNomDescendant'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departements:
    get:
      tags:
        - geoDepartement
      summary: 'Informations sur tous les départements actifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogdepts'
      parameters:
        - $ref: '#/components/parameters/dateDepartementsInPath'
      responses:
        '200':
          $ref: '#/components/responses/DepartementsListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}/precedents:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les departements qui précèdent le departement'
      operationId: 'getcogdepprec'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementDepart'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}/projetes:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les départements qui résultent de la projection du département à la date passée en paramètre.'
      operationId: 'getcogdepproj'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementDepart'
        - $ref: '#/components/parameters/dateProjectionInPath'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeProjetes200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/departement/{code}/suivants:
    get:
      tags:
        - geoDepartement
      summary: 'Informations concernant les départements qui succèdent au département'
      operationId: 'getcogdepsuiv'
      parameters:
        - $ref: '#/components/parameters/codeDepInPath'
        - $ref: '#/components/parameters/dateDepartementSuivantInPath'
      responses:
        '200':
          $ref: '#/components/responses/DepartementListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/district/{code}/ascendants:
    get:
      tags:
        - geoDistrict
      summary: 'Informations concernant les territoires qui contiennent le district'
      operationId: 'getcogdisasc'
      parameters:
        - $ref: '#/components/parameters/codeDistrictInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsAscendantsDistrict'
        - $ref: '#/components/parameters/typeTerritoireAscendantDistrict'
      responses:
        '200':
          $ref: '#/components/responses/DistrictListeAscendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/district/{code}:
    get:
      tags:
        - geoDistrict
      summary: 'Informations sur un district identifié par son code (cinq caractères)'
      operationId: 'getcogdis'
      parameters:
        - $ref: '#/components/parameters/codeDistrictInPath'
        - $ref: '#/components/parameters/dateDistrictActif'
      responses:
        '200':
          $ref: '#/components/responses/District200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/intercommunalite/{code}:
    get:
      tags:
        - geoIntercommunalite
      summary: 'Informations sur une intercommunalité identifiée par son code (neuf caractères)'
      operationId: 'getcoginterco'
      parameters:
        - $ref: '#/components/parameters/codeIntercommunaliteInPath'
        - $ref: '#/components/parameters/dateIntercommunaliteActive'
      responses:
        '200':
          $ref: '#/components/responses/Intercommunalite200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/intercommunalite/{code}/descendants:
    get:
      tags:
        - geoIntercommunalite
      summary: 'Informations concernant les territoires inclus dans l''intercommunalité'
      operationId: 'getcogintercodes'
      parameters:
        - $ref: '#/components/parameters/codeIntercommunaliteInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsIntercommunalite'
        - $ref: '#/components/parameters/typeTerritoireDescendantIntercommunalite'
      responses:
        '200':
          $ref: '#/components/responses/IntercommunaliteListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/intercommunalites:
    get:
      tags:
        - geoIntercommunalite
      summary: 'Informations sur toutes les intercommunalités actives à la date donnée. Par défaut, c''est la date courante.'
      operationId: 'getcogintercoliste'
      parameters:
        - $ref: '#/components/parameters/dateIntercommunalitesActives'
        - $ref: '#/components/parameters/filtreNomIntercommunalite'
      responses:
        '200':
          $ref: '#/components/responses/IntercommunalitesListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/intercommunalite/{code}/precedents:
    get:
      tags:
        - geoIntercommunalite
      summary: 'Informations concernant les intercommunalités qui précèdent l''intercommunalité'
      operationId: 'getcogintercoprec'
      parameters:
        - $ref: '#/components/parameters/codeIntercommunaliteInPath'
        - $ref: '#/components/parameters/dateIntercommunaliteDepart'
      responses:
        '200':
          $ref: '#/components/responses/IntercommunaliteListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/intercommunalite/{code}/suivants:
    get:
      tags:
        - geoIntercommunalite
      summary: 'Informations concernant les intercommunalités qui succèdent à l''intercommunalité'
      operationId: 'getcogintercosuiv'
      parameters:
        - $ref: '#/components/parameters/codeIntercommunaliteInPath'
        - $ref: '#/components/parameters/dateIntercommunaliteSuivantDepart'
      responses:
        '200':
          $ref: '#/components/responses/IntercommunaliteListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/iris/{code}:
    get:
      tags:
        - geoIris
      summary: 'Informations sur un Iris identifié par son code (neuf chiffres pour la métropole ou 2A/2B plus 7 chiffres pour la Corse)'
      operationId: 'getcogiris'
      parameters:
        - $ref: '#/components/parameters/codeIrisInPath'
        - $ref: '#/components/parameters/dateIrisActive'
      responses:
        '200':
          $ref: '#/components/responses/Iris200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/pays/{code}:
    get:
      tags:
        - geoPays
      summary: 'Informations sur un pays identifié par son code (cinq chiffres, les deux premiers étant 99)'
      operationId: 'getcogpays'
      parameters:
        - $ref: '#/components/parameters/codePaysInPath'
        - $ref: '#/components/parameters/datePaysActif'
      responses:
        '200':
          $ref: '#/components/responses/Pays200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/pays/{code}/descendants:
    get:
      tags:
        - geoPays
      summary: 'Informations concernant les territoires inclus dans le pays'
      operationId: 'getcogpaysdesc'
      parameters:
        - $ref: '#/components/parameters/codePaysInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsPays'
        - $ref: '#/components/parameters/typeTerritoireDescendantPays'
      responses:
        '200':
          $ref: '#/components/responses/PaysListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/pays:
    get:
      tags:
        - geoPays
      summary: 'Informations sur tous les pays actifs à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogpayslist'
      parameters:
        - $ref: '#/components/parameters/datePaysListActifs'
      responses:
        '200':
          $ref: '#/components/responses/PaysListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/pays/{code}/precedents:
    get:
      tags:
        - geoPays
      summary: 'Informations concernant les pays qui précèdent le pays'
      operationId: 'getcogpaysprec'
      parameters:
        - $ref: '#/components/parameters/codePaysPrecInPath'
        - $ref: '#/components/parameters/datePaysDepart'
      responses:
        '200':
          $ref: '#/components/responses/PaysListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/pays/{code}/suivants:
    get:
      tags:
        - geoPays
      summary: 'Informations concernant les pays qui succèdent au pays'
      operationId: 'getcogpayssuiv'
      parameters:
        - $ref: '#/components/parameters/codePaysSuivantInPath'
        - $ref: '#/components/parameters/datePaysSuivantInPath'
      responses:
        '200':
          $ref: '#/components/responses/PaysListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/region/{code}:
    get:
      tags:
        - geoRegion
      summary: 'Informations sur une région identifiée par son code (deux chiffres)'
      operationId: 'getcogreg'
      parameters:
        - $ref: '#/components/parameters/codeRegInPath'
        - $ref: '#/components/parameters/dateRegionActive'
      responses:
        '200':
          $ref: '#/components/responses/Region200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/region/{code}/descendants:
    get:
      tags:
        - geoRegion
      summary: 'Informations concernant les territoires inclus dans la région'
      operationId: 'getcogregdes'
      parameters:
        - $ref: '#/components/parameters/codeRegInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsRegion'
        - $ref: '#/components/parameters/typeTerritoireDescendantRegion'
        - $ref: '#/components/parameters/filtreNomDescendant'
      responses:
        '200':
          $ref: '#/components/responses/RegionListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/regions:
    get:
      tags:
        - geoRegion
      summary: 'Informations sur toutes les régions actives à la date données. Par défaut, c''est la date courante.'
      operationId: 'getcogregliste'
      parameters:
        - $ref: '#/components/parameters/dateRegionsActives'
      responses:
        '200':
          $ref: '#/components/responses/RegionsListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/region/{code}/precedents:
    get:
      tags:
        - geoRegion
      summary: 'Informations concernant les régions qui précèdent la région'
      operationId: 'getcogregprec'
      parameters:
        - $ref: '#/components/parameters/codeRegPrecInPath'
        - $ref: '#/components/parameters/dateRegionDepart'
      responses:
        '200':
          $ref: '#/components/responses/RegionListePrecedents200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/region/{code}/suivants:
    get:
      tags:
        - geoRegion
      summary: 'Informations concernant les régions qui succèdent à la région'
      operationId: 'getcogregsuiv'
      parameters:
        - $ref: '#/components/parameters/codeRegSuivantInPath'
        - $ref: '#/components/parameters/dateRegionSuivantDepart'
      responses:
        '200':
          $ref: '#/components/responses/RegionListeSuivants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

  /geo/uniteUrbaine2020/{code}:
    get:
      tags:
        - geoUniteUrbaine
      summary: 'Informations sur une unité urbaine identifiée par son code (cinq chiffres ou 1 chiffre, 1 lettre et 3 chiffres)'
      operationId: 'getcoguu'
      parameters:
        - $ref: '#/components/parameters/codeUniteUrbaineInPath'
        - $ref: '#/components/parameters/dateUniteUrbaineActive'
      responses:
        '200':
          $ref: '#/components/responses/UniteUrbaine200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/uniteUrbaine2020/{code}/descendants:
    get:
      tags:
        - geoUniteUrbaine
      summary: 'Informations concernant les territoires inclus dans l''unité urbaine'
      operationId: 'getcoguudes'
      parameters:
        - $ref: '#/components/parameters/codeUniteUrbaineInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsUniteUrbaine'
        - $ref: '#/components/parameters/typeTerritoireDescendantUniteUrbaine'
      responses:
        '200':
          $ref: '#/components/responses/UniteUrbaineListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/unitesUrbaines2020:
    get:
      tags:
        - geoUniteUrbaine
      summary: 'Informations sur toutes les unités urbaines actives à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcoguuliste'
      parameters:
        - $ref: '#/components/parameters/dateUnitesUrbainesActives'
      responses:
        '200':
          $ref: '#/components/responses/UnitesUrbainesListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'


  /geo/zoneDEmploi2020/{code}:
    get:
      tags:
        - geoZoneDEmploi
      summary: 'Informations sur une zone d''emploi française identifiée par son code (quatre chiffres)'
      operationId: 'getcogze'
      parameters:
        - $ref: '#/components/parameters/codeZoneDEmploiInPath'
        - $ref: '#/components/parameters/dateZoneDEmploiActive'
      responses:
        '200':
          $ref: '#/components/responses/ZoneDEmploi200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/zoneDEmploi2020/{code}/descendants:
    get:
      tags:
        - geoZoneDEmploi
      summary: 'Informations concernant les territoires inclus dans la zone d''emploi'
      operationId: 'getcogzedesc'
      parameters:
        - $ref: '#/components/parameters/codeZoneDEmploiInPath'
        - $ref: '#/components/parameters/dateTerritoiresActifsDescendantsZoneDEmploi'
        - $ref: '#/components/parameters/typeTerritoireDescendantZoneDEmplooi'
      responses:
        '200':
          $ref: '#/components/responses/ZoneDEmploiListeDescendants200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
  /geo/zonesDEmploi2020:
    get:
      tags:
        - geoZoneDEmploi
      summary: 'Informations sur toutes les zones d''emploi actives à la date donnée. Par défaut, c’est la date courante.'
      operationId: 'getcogzeliste'
      parameters:
        - $ref: '#/components/parameters/dateZonesDEmploiActives'
      responses:
        '200':
          $ref: '#/components/responses/ZonesDEmploiListe200'
        '400':
          $ref: '#/components/responses/IncorrectRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  parameters:
    codeTerritoireInPath:
      name: 'code'
      in: path
      description: 'Code identifiant un territoire'
      required: true
      schema:
        type: string
    dateActive:
      in: query
      description: |-
        Filtre pour renvoyer la commune active à la date donnée. Par défaut, c'est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    dateProjectionInPath:
      required: true
      in: query
      description: |-
        Date vers laquelle est projeté le departement. Paramètre obligatoire (format : 'AAAA-MM-JJ')
      name: dateProjection
      schema:
        $ref: '#/components/schemas/Date1950ParDefaut'
    typeTerritoire:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnum'
    filtreNomDescendant:
      name: 'filtreNom'
      in: query
      description: 'Filtre sur le nom des territoires renvoyés'
      schema:
        type: string
    codeDepInPath:
      name: 'code'
      in: path
      description: 'Code du département (deux ou trois caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeDep'
    dateDepartementActif:
      in: query
      description: |-
        Filtre pour renvoyer le département actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateDepartementsInPath:
      in: query
      description: |-
        Filtre pour renvoyer les départements actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsDepartement:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans le département actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsDepartement:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant le département actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantDepartement:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsDepartement'
    typeTerritoireAscendantDepartement:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsDepartement'


    codeAireDAttractionDesVillesInPath:
      name: 'code'
      in: path
      description: 'Code de l''aire d''attraction (trois chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeAireDAttractionDesVilles'
    dateAireDAttractionDesVillesActive:
      in: query
      description: |-
        Filtre pour renvoyer l'aire d'attraction active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateAiresDAttractionDesVillesActives:
      in: query
      description: |-
        Filtre pour renvoyer les aires d'attraction actives à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsAireDAttractionDesVilles:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans l'aire d'attraction active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantAireDAttractionDesVilles:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsAireDAttractionDesVilles'
    codeArrondissementInPath:
      name: 'code'
      in: path
      description: 'Code de l''arrondissement (trois ou quatre caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeArrondissement'
    dateArrondissementActif:
      in: query
      description: |-
        Filtre pour renvoyer l'arrondissement actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsArrondissement:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans l'arrondissement actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantArrondissement:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsArrondissement'
    dateArrondissementsActifs:
      in: query
      description: |-
        Filtre pour renvoyer les arrondissements actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    dateArrondissementDepart:
      in: query
      description: |-
        Filtre pour préciser l'arrondissement de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsArrondissement:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant l'arrondissement actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantArrondissement:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsArrondissement'
    codeArrondissementSuivantInPath:
      name: 'code'
      in: path
      description: 'Code de l''arrondissement (trois ou quatre caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeArrondissementSuivant'
    dateArrondissementSuivantInPath:
      name: 'date'
      in: query
      description: |-
        Filtre pour préciser l'arrondissement de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      schema:
        $ref: '#/components/schemas/Date2016ParDefaut'
    
    codeArrondissementMunicipalInPath:
      name: 'code'
      in: path
      description: 'Code de l''arrondissement municipal (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeArrondissementMunicipal'
    dateArrondissementMunicipalActif:
      in: query
      description: |-
        Filtre pour renvoyer l'arrondissement municipal actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateArrondissementsMunicipauxActifs:
      in: query
      description: |-
        Filtre pour renvoyer les arrondissements municipaux actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    dateArrondissementMunicipalDepart:
      in: query
      description: |-
        Filtre pour préciser l'arrondissement municipal de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsArrondissementMunicipal:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant l'arrondissement municipal actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantArrondissementMunicipal:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsArrondissementMunicipal'
    dateArrondissementMunicipalSuivantDepart:
      name: 'date'
      in: query
      description: |-
        Filtre pour préciser le département de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      schema:
        $ref: '#/components/schemas/Date1960ParDefaut'
    
    dateDepartementDepart:
      in: query
      description: |-
        Filtre pour préciser le département de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateDepartementSuivantInPath:
      name: 'date'
      in: query
      description: |-
        Filtre pour préciser le département de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      schema:
        $ref: '#/components/schemas/Date1950ParDefaut'
    codeCommuneInPath:
      required: true
      name: code
      in: path
      description: 'Code de la commune (cinq caractères)'
      schema:
        $ref: '#/components/schemas/CodeCom'
    dateCommuneDepart:
      in: query
      description: |-
        Filtre pour préciser la commune de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCommuneSuivantInPath:
      name: 'date'
      in: query
      description: |-
        Filtre pour préciser la commune de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      schema:
        $ref: '#/components/schemas/Date1945ParDefaut'
    dateProjectionCommuneInPath:
      required: true
      in: query
      description: |-
        Date vers laquelle est projeté le departement. Paramètre obligatoire (format : 'AAAA-MM-JJ')
      name: dateProjection
      schema:
        $ref: '#/components/schemas/Date1945ParDefaut'
    dateTerritoiresActifsDescendantsCommune:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans la commune active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsCommune:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant la commune active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCommunesActives:
      in: query
      description: |-
        Filtre pour renvoyer les communes actives à la date donnée. Par défaut, c'est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantCommune:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsCommune'
    typeTerritoireAscendantCommune:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsCommune'
    filtreNomCommune:
      name: 'filtreNom'
      in: query
      description: 'Filtre sur le nom de la commune'
      schema:
        type: string
        example: 'Bonnay'
    com:
      name: 'com'
      in: 'query'
      description: |-
        Sélectionner "true" pour inclure les collectivités d'outre-mer
      schema:
        type: boolean
        example: false

    codeCommuneAssocieeInPath:
      name: 'code'
      in: path
      description: 'Code de la commune associée (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCommuneAssociee'
    dateCommuneAssocieeActive:
      in: query
      description: |-
        Filtre pour renvoyer la commune associée active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCommunesAssocieesActives:
      in: query
      description: |-
        Filtre pour renvoyer les communes associées actives à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsCommuneAssociee:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant la commune associée active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantCommuneAssociee:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsCommuneAssociee'

    codeCommuneDelegueeInPath:
      name: 'code'
      in: path
      description: 'Code de la commune déléguée (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCommuneDeleguee'
    dateCommuneDelegueeActive:
      in: query
      description: |-
        Filtre pour renvoyer la commune déléguée active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCommunesDelegueesActives:
      in: query
      description: |-
        Filtre pour renvoyer les communes déléguées actives à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsCommuneDeleguee:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant la commune déléguée active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantCommuneDeleguee:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsCommuneDeleguee'

    codeDistrictInPath:
      name: 'code'
      in: path
      description: 'Code du district (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeDistrict'
    dateDistrictActif:
      in: query
      description: |-
        Filtre pour renvoyer le district actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsDistrict:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant le district actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantDistrict:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsDistrict'

    dateIntercommunaliteActive:
      in: query
      description: |-
        Filtre pour renvoyer l'intercommunalité active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    codeIntercommunaliteInPath:
      name: 'code'
      in: path
      description: 'Code de l''intercommunalité (neuf caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeInterco'
    dateTerritoiresActifsDescendantsIntercommunalite:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans l'intercommunalité active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantIntercommunalite:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsIntercommunalite'
    dateIntercommunalitesActives:
      in: query
      description: |-
        Filtre pour renvoyer les intercommunalités actives à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    filtreNomIntercommunalite:
      in: query
      description: |-
        Filtre sur le nom de l'intercommunalité
      name: filtreNom
      schema:
        type: 'string'
        format: string
    dateIntercommunaliteDepart:
      in: query
      description: |-
        Filtre pour préciser l'intercommunalité de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateIntercommunaliteSuivantDepart:
      in: query
      description: |-
        Filtre pour préciser l'intercommunalité de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        $ref: '#/components/schemas/Date2016ParDefaut'


    dateIrisActive:
      in: query
      description: |-
        Filtre pour renvoyer l'Iris active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    codeIrisInPath:
      name: 'code'
      in: path
      description: 'Code Insee de l''Iris (neuf caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeIris'

    codePaysInPath:
      name: 'code'
      in: path
      description: 'Code de lu pays (cinq chiffres, débutant par 99)'
      required: true
      schema:
        $ref: '#/components/schemas/CodePays'
    datePaysActif:
      in: query
      description: |-
        Filtre pour renvoyer le pays actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsPays:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans le pays à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantPays:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsPays'
    datePaysListActifs:
      in: query
      description: |-
        Filtre pour renvoyer les pays actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    codePaysPrecInPath:
      name: 'code'
      in: path
      description: 'Code du pays (cinq chiffres, débutant par 99)'
      required: true
      schema:
        $ref: '#/components/schemas/CodePaysPrec'
    datePaysDepart:
      in: query
      description: |-
        Filtre pour préciser le pays de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        $ref: '#/components/schemas/Date1965ParDefaut'
    codePaysSuivantInPath:
      name: 'code'
      in: path
      description: 'Code du pays (cinq chiffres, débutant par 99)'
      required: true
      schema:
        $ref: '#/components/schemas/CodePaysSuivant'
    datePaysSuivantInPath:
      in: query
      description: |-
        Filtre pour préciser le pays de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        $ref: '#/components/schemas/Date1950ParDefaut'
    
    
    codeRegInPath:
      name: 'code'
      in: path
      description: 'Code de la région (deux chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeReg'
    dateRegionActive:
      in: query
      description: |-
        Filtre pour renvoyer la région active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsRegion:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans la région active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantRegion:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsRegion'
    dateRegionsActives:
      in: query
      description: |-
        Filtre pour renvoyer les régions actives à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    codeRegPrecInPath:
      name: 'code'
      in: path
      description: 'Code de la région (deux chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeRegPrec'
    dateRegionDepart:
      in: query
      description: |-
        Filtre pour préciser la région de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    codeRegSuivantInPath:
      name: 'code'
      in: path
      description: 'Code de la région (deux chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeRegSuivant'
    dateRegionSuivantDepart:
      in: query
      description: |-
        Filtre pour préciser la région de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        $ref: '#/components/schemas/Date2000ParDefaut'

    codeUniteUrbaineInPath:
      name: 'code'
      in: path
      description: 'Code de l''unité urbaine (cinq chiffres ou 1 chiffre, 1 lettre et 3 chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeUniteUrbaine'
    dateUniteUrbaineActive:
      in: query
      description: |-
        Filtre pour renvoyer l'unité urbaine active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsUniteUrbaine:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans l'unité urbaine active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantUniteUrbaine:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsUniteUrbaine'
    dateUnitesUrbainesActives:
      in: query
      description: |-
        Filtre pour renvoyer les unités urbaines actives à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date

    codeBassinDeVieInPath:
      name: 'code'
      in: path
      description: 'Code du bassin de vie (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeBassinDeVie'
    dateBassinDeVieActif:
      in: query
      description: |-
        Filtre pour renvoyer le bassin de vie actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsBassinDeVie:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans le bassin de vie actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    dateBassinsDeVieActifs:
      in: query
      description: |-
        Filtre pour renvoyer les bassins de vie actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantBassinDeVie:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsBassinDeVie'
    filtreNomBassinDeVie:
      in: query
      description: |-
        Filtre sur le nom du bassin de vie
      name: filtreNom
      schema:
        type: 'string'
        format: string

    codeCantonInPath:
      name: 'code'
      in: path
      description: 'Code du canton (quatre chiffres pour la Métropole ou cinq chiffres pour les DOM ou 2A/2B plus 2 chiffres pour la Corse)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCanton'
    dateCantonActif:
      in: query
      description: |-
        Filtre pour renvoyer le canton actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCantonsActifs:
      in: query
      description: |-
        Filtre pour renvoyer les cantons actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    codeCantonPrecInPath:
      name: 'code'
      in: path
      description: 'Code du canton (quatre chiffres pour la Métropole ou cinq chiffres pour les DOM ou 2A/2B plus 2 chiffres pour la Corse)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCantonPrec'
    dateCantonDepart:
      in: query
      description: |-
        Filtre pour préciser le canton de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateCantonSuivantDepart:
      in: query
      description: |-
        Filtre pour préciser le canton de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        $ref: '#/components/schemas/Date2020ParDefaut'
    
    dateTerritoiresActifsAscendantsCanton:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant le canton actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantCanton:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsCanton'

    codeCantonOuVilleInPath:
      name: 'code'
      in: path
      description: 'Code du canton-ou-ville (quatre caractères, ou cinq pour les DOM, exemple : 97602)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCantonOuVille'
    dateCantonOuVilleActif:
      in: query
      description: |-
        Filtre pour renvoyer le canton-ou-ville actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsCantonOuVille:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans canton-ou ville actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantCantonOuVille:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsCantonOuVille'
    filtreNomDescendantSansExemple:
      name: 'filtreNom'
      in: query
      description: 'Filtre sur le nom des territoires renvoyés'
      schema:
        type: string
    dateCantonsEtVillesActifs:
      in: query
      description: |-
        Filtre pour renvoyer les cantons et villes actifs à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsCantonOuVille:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant le canton-ou-ville actif à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantCantonOuVille:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsCantonOuVille'
    codeCantonOuVillePrecInPath:
      name: 'code'
      in: path
      description: 'Code du canton-ou-ville (quatre caractères, ou cinq pour les DOM, exemple : 97602)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCantonOuVillePrec'
    dateCantouOuVilleDepart:
      in: query
      description: |-
        Filtre pour préciser le canton-ou-ville de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    codeCantonOuVilleSuivantInPath:
      name: 'code'
      in: path
      description: 'Code du canton-ou-ville (quatre caractères, ou cinq pour les DOM, exemple : 97602)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCantonOuVilleSuivants'
    dateCantonOuVilleSuivantInPath:
      in: query
      description: |-
        Filtre pour préciser le canton-ou-ville de départ. Par défaut, c’est la date courante qui est utilisée (format : 'AAAA-MM-JJ')
      name: date
      schema:
        $ref: '#/components/schemas/Date2016ParDefaut'
    
    codeCirconscriptionTerritorialeInPath:
      name: 'code'
      in: path
      description: 'Code de la circonscription territoriale (cinq caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCirconscriptionTerritoriale'
    dateCirconscriptionTerritorialeActive:
      in: query
      description: |-
        Filtre pour renvoyer la circonscription territoriale active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsAscendantsCirconscriptionTerritoriale:
      in: query
      description: |-
        Filtre pour renvoyer les territoires contenant la circonscription territoriale active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireAscendantCirconscriptionTerritoriale:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumAscendantsCirconscriptionTerritoriale'

    codeCollectiviteDOutreMerInPath:
      name: 'code'
      in: path
      description: 'Code de la collectivité d''outre-mer (trois caractères)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeCollectiviteDOutreMer'
    dateCollectiviteDOutreMerActive:
      in: query
      description: |-
        Filtre pour renvoyer la collectivité d'outre-mer à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsCollectiviteDOutreMer:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans la collectivité d'outre-mer active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantCollectiviteDOutreMer:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsCollectiviteDOutreMer'
    dateCollectivitesDOutreMerActives:
      in: query
      description: |-
        Filtre pour renvoyer les collectivités d'outre-mer à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date

    codeZoneDEmploiInPath:
      name: 'code'
      in: path
      description: 'Code de la zone d''emploi (quatre chiffres)'
      required: true
      schema:
        $ref: '#/components/schemas/CodeZoneDEmploi'
    dateZoneDEmploiActive:
      in: query
      description: |-
        Filtre pour renvoyer la zone d'emploi active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ')
      name: date
      schema:
        type: 'string'
        format: date
    dateTerritoiresActifsDescendantsZoneDEmploi:
      in: query
      description: |-
        Filtre pour renvoyer les territoires inclus dans la zone d'emploi active à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ').
      name: date
      schema:
        type: 'string'
        format: date
    typeTerritoireDescendantZoneDEmplooi:
      name: 'type'
      in: query
      description: 'Filtre sur le type de territoire renvoyé'
      schema:
        $ref: '#/components/schemas/TypeEnumDescendantsZoneDEmploi'
    dateZonesDEmploiActives:
      in: query
      description: |-
        Filtre pour renvoyer les zones d'emploi actives à la date donnée. Par défaut, c’est la date courante (format : 'AAAA-MM-JJ'). Le paramètre '*' permet de renvoyer tout l'historique.
      name: date
      schema:
        type: 'string'
        format: date

  examples:

    AireDAttractionDesVilles2020:
      value:
        code: '062'
        uri: 'http://id.insee.fr/geo/aireDAttractionDesVilles2020/858ff6ab-fb4c-4a03-896c-18a20ed01a45'
        type: 'AireDAttractionDesVilles2020'
        dateCreation: '2020-01-01'
        intituleSansArticle: 'Angoulême'
        typeArticle: '1'
        intitule: 'Angoulême'
    AireDAttractionDesVillesListeDescendants:
      value:
        - code: '16003'
          uri: 'http://id.insee.fr/geo/commune/5300719a-d772-4059-b380-c46704662250'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Agris'
          typeArticle: '0'
          intitule: 'Agris'
    ListeAiresDAttractionDesVilles2020:
      value:
        - code: '001'
          uri: 'http://id.insee.fr/geo/aireDAttractionDesVilles2020/3a65c4b6-8157-48be-bead-b74066f8456a'
          type: 'AireDAttractionDesVilles2020'
          dateCreation: '2020-01-01'
          intituleSansArticle: 'Paris'
          typeArticle: '0'
          intitule: 'Paris'

    ArrondissementListeAscendants:
      value:
        - code: '67'
          uri: 'http://id.insee.fr/geo/departement/e62b35df-f168-4dfa-b60f-ef6cdb3279a0'
          type: 'Departement'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Bas-Rhin'
          typeArticle: '2'
          chefLieu: '67482'
          intitule: 'Bas-Rhin'
    Arrondissement:
      value:
        code: '674'
        uri: 'http://id.insee.fr/geo/arrondissement/7f59df93-132b-400f-9aa6-b3c6be1018eb'
        type: 'Arrondissement'
        dateCreation: '2018-12-31'
        intituleSansArticle: 'Saverne'
        typeArticle: '0'
        chefLieu: '67437'
        intitule: 'Saverne'
    ArrondissementListeDescendants:
      value:
        - code: '67004'
          uri: 'http://id.insee.fr/geo/communeDeleguee/ec8ebfef-57c2-4e97-9d5c-f07b2e46fa36'
          type: 'CommuneDeleguee'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Allenwiller'
          typeArticle: '1'
          intitule: 'Allenwiller'
    ListeArrondissements:
      value:
        - code: '011'
          uri: 'http://id.insee.fr/geo/arrondissement/cc3aee67-96dc-4e9a-ae4e-26860a90e0d5'
          type: 'Arrondissement'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Belley'
          typeArticle: '0'
          chefLieu: '01034'
          intitule: 'Belley'
    ArrondissementListePrecedents:
      value:
        - code: '672'
          uri: 'http://id.insee.fr/geo/arrondissement/f1b88b67-f15d-49ad-9bb2-ce221f249f04'
          type: 'Arrondissement'
          dateCreation: '2015-01-01'
          dateSuppression: '2018-12-31'
          intituleSansArticle: 'Haguenau-Wissembourg'
          typeArticle: '0'
          chefLieu: '67180'
          intitule: 'Haguenau-Wissembourg'
    ArrondissementListeSuivants:
      value:
        - code: '042'
          uri: 'http://id.insee.fr/geo/arrondissement/1825eafe-2204-4849-b543-715f87615bb8'
          type: 'Arrondissement'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Castellane'
          typeArticle: '0'
          chefLieu: '04039'
          intitule: 'Castellane'
    
    ArrondissementMunicipalListeAscendants:
      value:
        - code: '84'
          uri: 'http://id.insee.fr/geo/region/c12b23e7-d2e7-4443-ac4b-de8de5ce22f2'
          type: 'Region'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Auvergne-Rhône-Alpes'
          typeArticle: '1'
          chefLieu: '69123'
          intitule: 'Auvergne-Rhône-Alpes'
    ArrondissementMunicipal:
      value:
        code: '69385'
        uri: 'http://id.insee.fr/geo/arrondissementMunicipal/cd9f4663-684c-455d-b62e-39e51c6fad99'
        type: 'ArrondissementMunicipal'
        dateCreation: '1964-08-12'
        intituleSansArticle: 'Lyon 5e Arrondissement'
        typeArticle: '0'
        intitule: 'Lyon 5e Arrondissement'
    ListeArrondissementsMunicipaux:
      value:
        - code: '13201'
          uri: 'http://id.insee.fr/geo/arrondissementMunicipal/d2ae811d-f0b8-4bac-972d-01dabe292665'
          type: 'ArrondissementMunicipal'
          dateCreation: '1946-10-18'
          intituleSansArticle: 'Marseille 1er Arrondissement'
          typeArticle: '0'
          intitule: 'Marseille 1er Arrondissement'
    ArrondissementMunicipalListePrecedents:
      value:
        - code: '69385'
          uri: 'http://id.insee.fr/geo/arrondissementMunicipal/67a81278-24c3-4aec-a2e8-fe914fe05fc2'
          type: 'ArrondissementMunicipal'
          dateCreation: '1943-01-01'
          dateSuppression: '1964-08-12'
          intituleSansArticle: 'Lyon 5e Arrondissement'
          typeArticle: '0'
          intitule: 'Lyon 5e Arrondissement'
    ArrondissementMunicipalListeSuivants:
      value:
        - code: '69385'
          uri: 'http://id.insee.fr/geo/arrondissementMunicipal/cd9f4663-684c-455d-b62e-39e51c6fad99'
          type: 'ArrondissementMunicipal'
          dateCreation: '1964-08-12'
          intituleSansArticle: 'Lyon 5e Arrondissement'
          typeArticle: '0'
          intitule: 'Lyon 5e Arrondissement'
        - code: '69389'
          uri: 'http://id.insee.fr/geo/arrondissementMunicipal/c14e7076-ffb4-490b-96c2-341e832d5f60'
          type: 'ArrondissementMunicipal'
          dateCreation: '1964-08-12'
          intituleSansArticle: 'Lyon 9e Arrondissement'
          typeArticle: '0'
          intitule: 'Lyon 9e Arrondissement'
    
    BassinDeVie2022:
      value:
        code: '01004'
        uri: 'http://id.insee.fr/geo/bassinDeVie2022/0e5bcc78-f043-404d-92af-d3d660772675'
        type: 'BassinDeVie2022'
        dateCreation: '2022-01-01'
        intituleSansArticle: 'Ambérieu-en-Bugey'
        typeArticle: '1'
        intitule: 'Ambérieu-en-Bugey'
    BassinDeVieListeDescendants:
      value:
        - code: '01002'
          uri: 'http://id.insee.fr/geo/commune/43018c68-c278-433a-b285-3531e8d5347e'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Abergement-de-Varey'
          typeArticle: '5'
          intitule: 'L''Abergement-de-Varey'
    ListeBassinsDeVie:
      value:
        - code: '01004'
          uri: 'http://id.insee.fr/geo/bassinDeVie2022/0e5bcc78-f043-404d-92af-d3d660772675'
          type: 'BassinDeVie2022'
          dateCreation: '2022-01-01'
          intituleSansArticle: 'Ambérieu-en-Bugey'
          typeArticle: '1'
          intitule: 'Ambérieu-en-Bugey'

    CantonListeAscendants:
      value:
        - code: '84'
          uri: 'http://id.insee.fr/geo/region/c12b23e7-d2e7-4443-ac4b-de8de5ce22f2'
          type: 'Region'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Auvergne-Rhône-Alpes'
          typeArticle: '1'
          chefLieu: '69123'
          intitule: 'Auvergne-Rhône-Alpes'
    Canton:
      value:
        code: '0101'
        uri: 'http://id.insee.fr/geo/canton/f96a2438-478f-4ebb-b659-434305dff18f'
        type: 'Canton'
        dateCreation: '2016-01-01'
        chefLieu: '01004'
        intituleSansArticle: 'Ambérieu-en-Bugey'
        typeArticle: '1'
        intitule: 'Ambérieu-en-Bugey'
    ListeCantons:
      value:
        - code: '0101'
          uri: 'http://id.insee.fr/geo/canton/f96a2438-478f-4ebb-b659-434305dff18f'
          type: 'Canton'
          dateCreation: '2016-01-01'
          chefLieu: '01004'
          intituleSansArticle: 'Ambérieu-en-Bugey'
          typeArticle: '1'
          intitule: 'Ambérieu-en-Bugey'
    CantonListePrecedents:
      value:
        - code: '0103'
          uri: 'http://id.insee.fr/geo/canton/849dca85-8ef3-4a00-bc06-3165aeff1dbd'
          type: 'Canton'
          dateCreation: '2016-01-01'
          dateSuppression: '2020-03-07'
          intituleSansArticle: 'Bellegarde-sur-Valserine'
          typeArticle: '0'
          intitule: 'Bellegarde-sur-Valserine'
    CantonListeSuivants:
      value:
        - code: '0103'
          uri: 'http://id.insee.fr/geo/canton/51c5f329-4745-46c0-b0d6-14b0d7046582'
          type: 'Canton'
          dateCreation: '2020-03-07'
          intituleSansArticle: 'Valserhône'
          typeArticle: '0'
          intitule: 'Valserhône'

    CantonOuVilleListeAscendants:
      value:
        - code: '84'
          uri: 'http://id.insee.fr/geo/region/c12b23e7-d2e7-4443-ac4b-de8de5ce22f2'
          type: 'Region'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Auvergne-Rhône-Alpes'
          typeArticle: '1'
          chefLieu: '69123'
          intitule: 'Auvergne-Rhône-Alpes'
    CantonOuVille:
      value:
        code: '0101'
        uri: 'http://id.insee.fr/geo/cantonOuVille/5e75ead7-7564-4480-83b0-7e16a7d8acf7'
        type: 'CantonOuVille'
        dateCreation: '2016-01-01'
        intituleSansArticle: 'Ambérieu-en-Bugey'
        typeArticle: '1'
        intitule: 'Ambérieu-en-Bugey'
    CantonOuVilleListeDescendants:
      value:
        - code: '0102'
          uri: 'http://id.insee.fr/geo/commune/43018c68-c278-433a-b285-3531e8d5347e'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Abergement-de-Varey'
          typeArticle: '5'
          intitule: 'L''Abergement-de-Varey'
    ListeCantonsEtVilles:
      value:
        - code: '0101'
          uri: 'http://id.insee.fr/geo/cantonOuVille/5e75ead7-7564-4480-83b0-7e16a7d8acf7'
          type: 'CantonOuVille'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Ambérieu-en-Bugey'
          typeArticle: '1'
          intitule: 'Ambérieu-en-Bugey'
    CantonOuVilleListePrecedents:
      value:
        - code: '0104'
          uri: 'http://id.insee.fr/geo/cantonOuVille/383181fb-59ba-425c-81c1-dfdf1b51cf8c'
          type: 'CantonOuVille'
          dateCreation: '2016-01-01'
          dateSuppression: '2020-03-07'
          intituleSansArticle: 'Belley'
          typeArticle: '0'
          intitule: 'Belley'
    CantonOuVilleListeSuivants:
      value:
        - code: '0103'
          uri: 'http://id.insee.fr/geo/cantonOuVille/cb4d9856-a39d-4283-a9ab-d91396ebd705'
          type: 'CantonOuVille'
          dateCreation: '2020-03-07'
          intituleSansArticle: 'Valserhône'
          typeArticle: '0'
          intitule: 'Valserhône'
    
    
    
    
    CirconscriptionTerritorialeListeAscendants:
      value:
        - code: '986'
          uri: 'http://id.insee.fr/geo/collectiviteDOutreMer/ecfac5cd-a301-4dff-bed9-dfc54421bf6c'
          type: 'CollectiviteDOutreMer'
          dateCreation: '2008-01-01'
          intituleSansArticle: 'Wallis-et-Futuna'
          typeArticle: '0'
          intitule: 'Wallis-et-Futuna'
    CirconscriptionTerritoriale:
      value:
        code: '98611'
        uri: 'http://id.insee.fr/geo/circonscriptionTerritoriale/31f556e9-55e5-4e48-9dac-2d8113fa609e'
        type: 'CirconscriptionTerritoriale'
        dateCreation: '2008-01-01'
        intituleSansArticle: 'Alo'
        typeArticle: '1'
        intitule: 'Alo'

    CollectiviteDOutreMer:
      value:
        code: '988'
        uri: 'http://id.insee.fr/geo/collectiviteDOutreMer/bc93b612-59f5-463a-a05f-e5ed9013dc8d'
        type: 'CollectiviteDOutreMer'
        dateCreation: '2008-01-01'
        intituleSansArticle: 'Nouvelle-Calédonie'
        typeArticle: '0'
        intitule: 'Nouvelle-Calédonie'
    CollectiviteDOutreMerListeDescendants:
      value:
        - code: '98801'
          uri: 'http://id.insee.fr/geo/commune/82cb85a7-c974-4100-a82a-54b7e2c9ca13'
          type: 'Commune'
          dateCreation: '2008-01-01'
          intituleSansArticle: 'Belep'
          typeArticle: '0'
          intitule: 'Belep'
    ListeCollectivitesDOutreMer:
      value:
        - code: '975'
          uri: 'http://id.insee.fr/geo/collectiviteDOutreMer/352968dd-fcc7-4950-8b71-8c94053cb126'
          type: 'CollectiviteDOutreMer'
          dateCreation: '2008-01-01'
          intituleSansArticle: 'Saint-Pierre-et-Miquelon'
          typeArticle: '0'
          intitule: 'Saint-Pierre-et-Miquelon'


    CommuneListeAscendants:
      value:
        - code: '024'
          uri: 'http://id.insee.fr/geo/aireDAttractionDesVilles2020/9d05148e-a733-4bc4-9223-e8a27618c7c0'
          type: 'AireDAttractionDesVilles2020'
          dateCreation: '2020-01-01'
          intituleSansArticle: 'Caen'
          typeArticle: '0'
          intitule: 'Caen'
        - code: '14752'
          uri: 'http://id.insee.fr/geo/bassinDeVie2022/a2f90771-4ff4-498e-9464-9cd75cdf2db7'
          type: 'BassinDeVie2022'
          dateCreation: '2022-01-01'
          intituleSansArticle: 'Villers-Bocage'
          typeArticle: '0'
          intitule: 'Villers-Bocage'
        - code: '1401'
          uri: 'http://id.insee.fr/geo/cantonOuVille/decd5410-bd2c-4561-b2c1-c1ef258fa3c0'
          type: 'CantonOuVille'
          dateCreation: '2021-02-26'
          intituleSansArticle: 'Monts d’Aunay'
          typeArticle: '4'
          intitule: 'Les Monts d’Aunay'
        - code: '1401'
          uri: 'http://id.insee.fr/geo/canton/25982682-5635-40ad-8040-09110edb43e1'
          type: 'Canton'
          dateCreation: '2021-02-26'
          chefLieu: '14027'
          intitule: 'Les Monts d’Aunay'
          intituleSansArticle: 'Monts d’Aunay'
          typeArticle: '4'
        - code: '14'
          uri: 'http://id.insee.fr/geo/departement/b01dce92-b91f-4648-80e7-536bd1823c2c'
          type: 'Departement'
          dateCreation: '2018-01-01'
          intituleSansArticle: 'Calvados'
          typeArticle: '2'
          chefLieu: '14118'
          intitule: 'Calvados'
        - code: '200069524'
          uri: 'http://id.insee.fr/geo/intercommunalite/208f94f5-28b8-421b-b153-e651cee0781f'
          type: 'Intercommunalite'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Pré-Bocage Intercom'
          typeArticle: 'X'
          intitule: 'Pré-Bocage Intercom'
        - code: '28'
          uri: 'http://id.insee.fr/geo/region/a7ac0f8e-d4d4-4ff2-9135-f0e0b6371aed'
          type: 'Region'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Normandie'
          typeArticle: '0'
          chefLieu: '76540'
          intitule: 'Normandie'
        - code: '2804'
          uri: 'http://id.insee.fr/geo/zoneDEmploi2020/4de3edd0-840a-437b-aa63-bba467c1a3ab'
          type: 'ZoneDEmploi2020'
          dateCreation: '2020-01-01'
          intituleSansArticle: 'Caen'
          typeArticle: '0'
          intitule: 'Caen'
    Commune:
      value:
        code: '14475'
        uri: 'http://id.insee.fr/geo/commune/4b88116a-9ede-42f5-aef5-a70304de593b'
        type: 'Commune'
        dateCreation: '2017-01-01'
        intituleSansArticle: 'Val d''Arry'
        typeArticle: '0'
        intitule: 'Val d''Arry'
    CommuneListeDescendants:
      value:
        - code: '14373'
          uri: 'http://id.insee.fr/geo/communeDeleguee/33afe07c-f132-4cdd-a188-4500c6928e62'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Locheur'
          typeArticle: '2'
          intitule: 'Le Locheur'
        - code: '14432'
          uri: 'http://id.insee.fr/geo/communeDeleguee/92b6f5a8-2766-4561-88f2-d7958529c488'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Missy'
          typeArticle: '0'
          intitule: 'Missy'
        - code: '14475'
          uri: 'http://id.insee.fr/geo/communeDeleguee/75df6d90-905e-428f-a410-d3e56f2683f2'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Noyers-Bocage'
          typeArticle: '0'
          intitule: 'Noyers-Bocage'
        - code: '14702'
          uri: 'http://id.insee.fr/geo/communeDeleguee/2a818192-2ffb-4955-b45d-a34f38753e87'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Tournay-sur-Odon'
          typeArticle: '0'
          intitule: 'Tournay-sur-Odon'
    CommunesListe:
      value:
        - code: '25073'
          uri: 'http://id.insee.fr/geo/commune/2ac33139-2a97-4b09-87b3-263cbf14c0b6'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Bonnay'
          typeArticle: '0'
          intitule: 'Bonnay'
        - code: '71042'
          uri: 'http://id.insee.fr/geo/commune/2ee9b3c8-9861-40a0-af5e-f84ce2f2b3bc'
          type: 'Commune'
          dateCreation: '2023-01-01'
          intituleSansArticle: 'Bonnay-Saint-Ythaire'
          typeArticle: '0'
          intitule: 'Bonnay-Saint-Ythaire'
        - code: '80112'
          uri: 'http://id.insee.fr/geo/commune/98c861ac-6da4-4f18-ba45-665bae059c5f'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Bonnay'
          typeArticle: '0'
          intitule: 'Bonnay'
    CommuneListePrecedents:
      value:
        - code: '14373'
          uri: 'http://id.insee.fr/geo/commune/9b9298ba-d31f-4570-82f1-ad821704a413'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Locheur'
          typeArticle: '2'
          intitule: 'Le Locheur'
        - code: '14475'
          uri: 'http://id.insee.fr/geo/commune/871d067a-a559-419c-a881-3602bb9fc7a1'
          type: 'Commune'
          dateCreation: '2016-01-01'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Noyers-Missy'
          typeArticle: '0'
          intitule: 'Noyers-Missy'
        - code: '14702'
          uri: 'http://id.insee.fr/geo/commune/69441f11-d773-46d7-838b-ac22102415d1'
          type: 'Commune'
          dateCreation: '1957-04-13'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Tournay-sur-Odon'
          typeArticle: '0'
          intitule: 'Tournay-sur-Odon'
    CommuneListeProjetes:
      value:
        - code: '14373'
          uri: 'http://id.insee.fr/geo/commune/9b9298ba-d31f-4570-82f1-ad821704a413'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Locheur'
          typeArticle: '2'
          intitule: 'Le Locheur'
        - code: '14432'
          uri: 'http://id.insee.fr/geo/commune/3a20a2ae-553b-4700-8009-e18fe26e0038'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '2016-01-01'
          intituleSansArticle: 'Missy'
          typeArticle: '0'
          intitule: 'Missy'
        - code: '14475'
          uri: 'http://id.insee.fr/geo/commune/95745cb6-90c1-4207-a45c-6c4cef0a7db4'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '1958-10-13'
          intituleSansArticle: 'Noyers'
          typeArticle: '0'
          intitule: 'Noyers'
        - code: '14702'
          uri: 'http://id.insee.fr/geo/commune/5ff04633-e954-446d-b5aa-f49027b4b6b6'
          type: 'Commune'
          dateCreation: '1943-01-01'
          dateSuppression: '1957-04-13-01-01'
          intituleSansArticle: 'Tournay'
          typeArticle: '0'
          intitule: 'Tournay'
    CommuneListeSuivants:
      value:
        - code: '14475'
          uri: 'http://id.insee.fr/geo/commune/c2e2d19d-1ace-4cdc-b80d-c37a1aa59d1e'
          type: 'Commune'
          dateCreation: '1958-10-13'
          dateSuppression: '2016-01-01'
          intituleSansArticle: 'Noyers-Bocage'
          typeArticle: '0'
          intitule: 'Noyers-Bocage'

    CommuneAssocieeListeAscendants:
      value:
        - code: '32'
          uri: 'http://id.insee.fr/geo/region/9c60accf-61a2-4f61-9546-875924d210ec'
          type: 'Region'
          dateCreation: '2016-12-31'
          intituleSansArticle: 'Hauts-de-France'
          typeArticle: '4'
          chefLieu: '59350'
          intitule: 'Hauts-de-France'
    CommuneAssociee:
      value:
        code: '59355'
        uri: 'http://id.insee.fr/geo/communeAssociee/84564ad2-a211-4744-9e01-1bb1900e2e68'
        type: 'CommuneAssociee'
        dateCreation: '2000-02-27'
        intituleSansArticle: 'Lomme'
        typeArticle: '0'
        intitule: 'Lomme'
    ListeCommunesAssociees:
      value:
        - code: '01120'
          uri: 'http://id.insee.fr/geo/communeAssociee/2c8fa8e3-dc3b-4b8a-907a-82e4d07bce2c'
          type: 'CommuneAssociee'
          dateCreation: '1973-01-01'
          intituleSansArticle: 'Cordieux'
          typeArticle: '0'
          intitule: 'Cordieux'

    CommuneDelegueeListeAscendants:
      value:
        - code: '76'
          uri: 'http://id.insee.fr/geo/region/862793ee-891d-4831-b9c9-a94cfe2e6f7b'
          type: 'Region'
          dateCreation: '2016-09-29'
          intituleSansArticle: 'Occitanie'
          typeArticle: '1'
          chefLieu: '31555'
          intitule: 'Occitanie'
    CommuneDeleguee:
      value:
        - code: '46248'
          uri: 'http://id.insee.fr/geo/communeDeleguee/c333331f-b09b-4253-b012-dc0d0a65a290'
          type: 'CommuneDeleguee'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Sainte-Alauzie'
          typeArticle: '0'
          intitule: 'Sainte-Alauzie'
    ListeCommunesDeleguees:
      value:
        - code: '01015'
          uri: 'http://id.insee.fr/geo/communeDeleguee/3c07001c-7efe-40f9-90fc-6a892af20238'
          type: 'CommuneDeleguee'
          dateCreation: '2016-01-01'
          intituleSansArticle: 'Arbignieu'
          typeArticle: '0'
          intitule: 'Arbignieu'


    DepartementListeAscendants:
      value:
        - code: '53'
          uri: 'http://id.insee.fr/geo/region/6c83500c-454c-4d69-aec5-b988fb6f6f1c'
          type: 'Region'
          dateCreation: '2019-01-01'
          intituleSansArticle: 'Bretagne'
          typeArticle: '0'
          chefLieu: '35238'
          intitule: 'Bretagne'
    Departement:
      value:
        code: '22'
        uri: 'http://id.insee.fr/geo/departement/f07f6a49-9dce-4f2d-a99e-5d61eedf2827'
        type: 'Departement'
        dateCreation: '1990-03-08'
        intituleSansArticle: 'Côtes-d''Armor'
        typeArticle: '4'
        chefLieu: '22278'
        intitule: 'Côtes-d''Armor'
    DepartementListeDescendants:
      value:
        - code: '221'
          uri: 'http://id.insee.fr/geo/arrondissement/1e07b989-b3ff-43be-bfe6-05e9c9ba19d7'
          type: 'Arrondissement'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Dinan'
          typeArticle: '0'
          chefLieu: '22050'
          intitule: 'Dinan'
        - code: '222'
          uri: 'http://id.insee.fr/geo/arrondissement/87fdca9c-f9ed-41e5-93d9-f44534ffd725'
          type: 'Arrondissement'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Guingamp'
          typeArticle: '0'
          chefLieu: '22070'
          intitule: 'Guingamp'
    DepartementsListe:
      value:
        - code: '01'
          uri: 'http://id.insee.fr/geo/departement/84680e6f-2e99-44c9-a9ba-2e96a2ae48b7'
          type: 'Departement'
          dateCreation: '1967-12-31'
          intituleSansArticle: 'Ain'
          typeArticle: '5'
          chefLieu: '01053'
          intitule: 'Ain'
        - code: '02'
          uri: 'http://id.insee.fr/geo/departement/8b195d1f-8676-4c06-873c-ee5b6d66a23f'
          type: 'Departement'
          dateCreation: '2016-12-31'
          intituleSansArticle: 'Aisne'
          typeArticle: '5'
          chefLieu: '02408'
          intitule: 'Aisne'
    DepartementListePrecedents:
      value:
        - code: '22'
          uri: 'http://id.insee.fr/geo/departement/95af7065-d100-4c4f-afd5-764edfe9ae9b'
          type: 'Departement'
          dateCreation: '1943-01-01'
          dateSuppression: '1990-03-08'
          intituleSansArticle: 'Côtes-du-Nord'
          typeArticle: '4'
          chefLieu: '22278'
          intitule: 'Côtes-du-Nord'
    DepartementListeProjetes:
      value:
        - code: '22'
          uri: 'http://id.insee.fr/geo/departement/95af7065-d100-4c4f-afd5-764edfe9ae9b'
          type: 'Departement'
          dateCreation: '1943-01-01'
          dateSuppression: '1990-03-08'
          intituleSansArticle: 'Côtes-du-Nord'
          typeArticle: '4'
          chefLieu: '22278'
          intitule: 'Côtes-du-Nord'
    DepartementListeSuivants:
      value:
        - code: '22'
          uri: 'http://id.insee.fr/geo/departement/f07f6a49-9dce-4f2d-a99e-5d61eedf2827'
          type: 'Departement'
          dateCreation: '1990-03-08'
          intituleSansArticle: 'Côtes-d''Armor'
          typeArticle': '4'
          chefLieu: '22278'
          intitule: 'Côtes-d''Armor'

    DistrictListeAscendants:
      value:
        - code: '984'
          uri: 'http://id.insee.fr/geo/collectiviteDOutreMer/f6496613-8f78-4184-80ab-81a077db6b37'
          type: 'CollectiviteDOutreMer'
          dateCreation: '2008-01-01'
          intituleSansArticle: 'Terres australes et antarctiques françaises'
          typeArticle: '4'
          intitule: 'Terres australes et antarctiques françaises'
    District:
      value:
        code: '98411'
        uri: 'http://id.insee.fr/geo/district/d028b78a-9c4d-4e22-9b60-efffd7085eb0'
        type: 'District'
        dateCreation: '2008-01-01'
        intituleSansArticle: 'Îles Saint-Paul et Amsterdam'
        typeArticle: '4'
        intitule: 'Îles Saint-Paul et Amsterdam'

    Intercommunalite:
      value:
        code: '240100883'
        uri: 'http://id.insee.fr/geo/intercommunalite/5a238840-5cbd-469f-80c8-43713bf8e4a8'
        type: 'Intercommunalite'
        dateCreation: '2017-01-01'
        intituleSansArticle: 'Plaine de l''Ain'
        typeArticle: '3'
        intituleComplet: 'Communauté de communes de La Plaine de l''Ain'
        categorieJuridique: 'Communauté de communes'
        intitule: 'La Plaine de l''Ain'
    IntercommunaliteListeDescendants:
      value:
        - code: '01002'
          uri: 'http://id.insee.fr/geo/commune/43018c68-c278-433a-b285-3531e8d5347e'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Abergement-de-Varey'
          typeArticle: '5'
          intitule: 'Abergement-de-Varey'
    ListeIntercommunalites:
      value:
        - code: '240100883'
          uri: 'http://id.insee.fr/geo/intercommunalite/5a238840-5cbd-469f-80c8-43713bf8e4a8'
          type: 'Intercommunalite'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Plaine de l''Ain'
          typeArticle: '3'
          intituleComplet: 'Communauté de communes de La Plaine de l''Ain'
          categorieJuridique: 'Communauté de communes'
          intitule: 'La Plaine de l''Ain'
    IntercommunaliteListePrecedents:
      value:
        - code: '240100883'
          uri: 'http://id.insee.fr/geo/intercommunalite/da6087eb-5061-4d99-82c4-03ae9ef5334f'
          type: 'Intercommunalite'
          dateCreation: '2008-01-01'
          dateSuppression: '2017-01-01'
          intituleSansArticle: 'Plaine de l''Ain'
          typeArticle: '3'
          intituleComplet: 'Communauté de communes de La Plaine de l''Ain'
          categorieJuridique: 'Communauté de communes'
          intitule: 'La Plaine de l''Ain'
    IntercommunaliteListeSuivants:
      value:
        - code: '240100883'
          uri: 'http://id.insee.fr/geo/intercommunalite/5a238840-5cbd-469f-80c8-43713bf8e4a8'
          type: 'Intercommunalite'
          dateCreation: '2017-01-01'
          intituleSansArticle: 'Plaine de l''Ain'
          typeArticle: '3'
          intituleComplet: 'Communauté de communes de La Plaine de l''Ain'
          categorieJuridique: 'Communauté de communes'
          intitule: 'La Plaine de l''Ain'

    Iris:
      value:
        code: '010040101'
        uri: 'http://id.insee.fr/geo/iris/b8c772de-9551-4f13-81c5-eca5bb0f2f7d'
        type': 'Iris'
        dateCreation: '2008-01-01'
        typeDIris: 'H'
        intitule: 'Les Pérouses-Triangle d''Activités'
        intituleSansArticle: 'Pérouses-Triangle d''Activités'
        typeArticle: '4'

    Pays:
      value:
        code: '99132'
        uri: 'http://id.insee.fr/geo/pays/7c3380f3-897b-4470-a12f-2ae3b61fe4d0'
        type: 'Pays'
        dateCreation: '1943-01-01'
        intituleSansArticle: 'Royaume-Uni'
        intituleComplet: "Royaume-Uni de Grande-Bretagne et d’Irlande du Nord"
        iso3166alpha2: "GB"
        iso3166alpha3: "GBR"
        iso3166num: "826"
    PaysListeDescendants:
      value:
        - code: '99133'
          uri: 'ttp://id.insee.fr/geo/territoire/1af281f6-f58a-4197-a40c-3c1514ebd9c5'
          type: 'Territoire'
          dateCreation: '1964-09-21'
          intitule: 'Territoires britanniques en Méditerranée'
          intituleComplet: "Gibraltar, Akrotiri et Dhekelia"
    PaysListe:
      value:
        - code: '99100'
          uri: 'http://id.insee.fr/geo/pays/b7e3f0c9-b653-4a3e-904a-de63b80e108b'
          type: 'Pays'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'France'
          intituleComplet: "République française"
          iso3166alpha2: "FR"
          iso3166alpha3: "FRA"
          iso3166num: "250"
    PaysListePrecedents:
      value:
        - code: '99309'
          uri: 'http://id.insee.fr/geo/pays/aed778dc-3f9e-467d-a7c2-c875a12cb44d'
          type: 'Pays'
          dateCreation: '1962-12-09'
          dateSuppression: '1964-04-26'
          intitule: 'Tanganyika'
          intituleComplet: "République du Tanganyika"
        - code: '99362'
          uri: 'http://id.insee.fr/geo/pays/3b5c07e0-bc4a-480d-9b29-ef04e1fb775d'
          type: 'Pays'
          dateCreation: '1963-12-10'
          dateSuppression: '1964-04-26'
          intitule: 'Zanzibar'
          intituleComplet: "République populaire de Zanzibar"
    PaysListeSuivants:
      value:
        - code: '99119'
          uri: 'http://id.insee.fr/geo/pays/0b0d2b49-54a2-4d6c-be48-8900c905eaaa'
          type: 'Pays'
          dateCreation: '1991-06-25'
          intitule: 'Croatie'
          intituleComplet: 'République de Croatie'
          iso3166alpha2: 'HR'
          iso3166alpha3: 'HRV'
          iso3166num: '191'
        - code: '99121'
          uri: 'http://id.insee.fr/geo/pays/fcc6730a-8cb3-45dd-a476-384b489a50b5'
          type: 'Pays'
          dateCreation: '1991-06-25'
          dateSuppression: '1991-09-08'
          intitule: 'Yougoslavie'
          intituleComplet: 'République fédérative socialiste de Yougoslavie'
        - code: '99145'
          uri: 'http://id.insee.fr/geo/pays/b1a977b0-a56f-47e9-9991-3dfa9e93197e'
          type: 'Pays'
          dateCreation: '1991-06-25'
          intitule: 'Slovénie'
          intituleComplet: 'République de Slovénie'
          iso3166alpha2: 'SI'
          iso3166alpha3: 'SVN'
          iso3166num: '705'
    
    Region:
      value:
        code: '06'
        uri: 'http://id.insee.fr/geo/region/0e9f9adc-742d-4ab7-90bd-30e5aaf7b2ab'
        type: 'Region'
        dateCreation: '2011-03-31'
        intituleSansArticle: 'Mayotte'
        typeArticle: '0'
        chefLieu: '97611'
        intitule: 'Mayotte'
    RegionListeDescendants:
      value:
        - code: '97601'
          uri: 'http://id.insee.fr/geo/commune/cc6df496-5a62-4c71-88f8-22fca3a411d7'
          type: 'Commune'
          dateCreation: '2011-03-31'
          intituleSansArticle: 'Acoua'
          typeArticle: '1'
          intitule: 'Acoua'
    ListeRegions:
      value:
        - code: '01'
          uri: 'http://id.insee.fr/geo/region/598b3ed6-a7ea-44f8-a130-7a42e3630a8a'
          type: 'Region'
          dateCreation: '2007-07-15'
          intituleSansArticle: 'Guadeloupe'
          typeArticle: '3'
          chefLieu: '97105'
          intitule: 'Guadeloupe'
    RegionListePrecedents:
      value:
        - code: '32'
          uri: 'http://id.insee.fr/geo/region/70086d81-9af2-4aeb-8734-502658d6a93f'
          type: 'Region'
          dateCreation: '2016-09-29'
          dateSuppression: '2016-12-31'
          intituleSansArticle: 'Hauts-de-France'
          typeArticle: '4'
          chefLieu: '59350'
          intitule: 'Hauts-de-France'
    RegionListeSuivants:
      value:
        - code: '44'
          uri: 'http://id.insee.fr/geo/region/5295742f-1bd8-4062-b9d2-3a32ab1d8fbe'
          type: 'Region'
          dateCreation: '2016-01-01'
          dateSuppression: '2016-09-29'
          intituleSansArticle: 'Alsace-Champagne-Ardenne-Lorraine'
          typeArticle: '1'
          chefLieu: '67482'
          intitule: 'Alsace-Champagne-Ardenne-Lorraine"'
    
    
    UniteUrbaine2020:
      value:
        code: '01121'
        uri: 'http://id.insee.fr/geo/uniteUrbaine2020/57a37c9b-e426-430e-b8c1-ac0fd640e345'
        type: 'UniteUrbaine2020'
        dateCreation: '2020-10-01'
        intituleSansArticle: 'Jujurieux'
        typeArticle: '0'
        intitule: 'Jujurieux'
    UniteUrbaineListeDescendants:
      value:
        - code: '01199'
          uri: 'http://id.insee.fr/geo/commune/0d69a92e-70d3-4ebf-aa3b-db76e6bedf7e'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Jujurieux'
          typeArticle: '0'
          intitule: 'Jujurieux'
    ListeUnitesUrbaines:
      value:
        - code: '00151'
          uri: 'http://id.insee.fr/geo/uniteUrbaine2020/a7355a50-7516-4f7b-8919-a03bc28cd12b'
          type: 'UniteUrbaine2020'
          dateCreation: '2020-10-01'
          intituleSansArticle: 'Lécluse'
          typeArticle: '0'
          intitule: 'Lécluse'


    ZoneDEmploi2020:
      value:
        code: '2415'
        uri: 'http://id.insee.fr/geo/zoneDEmploi2020/dbab03e7-3d8d-4797-8ab1-0ed36a4db9c1'
        type: 'ZoneDEmploi2020'
        dateCreation: '2020-01-01'
        intituleSansArticle: 'Vierzon'
        typeArticle: '0'
        intitule: 'Vierzon'
    ZoneDEmploiListeDescendants:
      value:
        - code: '18036'
          uri: 'http://id.insee.fr/geo/commune/9d090028-9065-4c75-bb2b-6ea30d430af7'
          type: 'Commune'
          dateCreation: '1943-01-01'
          intituleSansArticle: 'Brinay'
          typeArticle: '0'
          intitule: 'Brinay'
    ListeZonesDEmploi2020:
      value:
        - code: '0051'
          uri: 'http://id.insee.fr/geo/zoneDEmploi2020/e6911283-05f4-4997-916a-cc2b58c1e013'
          type: 'ZoneDEmploi2020'
          dateCreation: '2025-01-01'
          intituleSansArticle: 'Alençon'
          typeArticle: '1'
          intitule: 'Vierzon'

  responses:
    IncorrectRequest:
      description: 'La syntaxe de la requête est incorrecte'
    NotFound:
      description: 'Ressource non trouvée'
    NotAcceptable:
      description: 'L''en-tête HTTP ''Accept'' contient une valeur non acceptée'
    ServerError:
      description: 'Erreur interne du serveur'

    AireDAttractionDesVilles200:
      description: 'Opération réussie pour l''aire d''attraction'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AireDAttractionDesVilles2020'
          examples:
            défaut:
              $ref: '#/components/examples/AireDAttractionDesVilles2020'
        application/xml:
          schema:
            $ref: '#/components/schemas/AireDAttractionDesVilles2020'
          examples:
            défaut:
              $ref: '#/components/examples/AireDAttractionDesVilles2020'
    AireDAttractionDesVillesListeDescendants200:
      description: 'Opération réussie pour les descendants d''une aire d''attraction des villes'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AireDAttractionDesVillesListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/AireDAttractionDesVillesListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/AireDAttractionDesVillesListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/AireDAttractionDesVillesListeDescendants'
    AiresDAttractionDesVillesListe200:
      description: 'Opération réussie pour les aires d''attraction'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeAiresDAttractionDesVilles2020'
          examples:
            défaut:
              $ref: '#/components/examples/ListeAiresDAttractionDesVilles2020'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeAiresDAttractionDesVilles2020'
          examples:
            défaut:
              $ref: '#/components/examples/ListeAiresDAttractionDesVilles2020'

    ArrondissementListeAscendants200:
      description: 'Opération réussie pour les ascendants d''un arrondissement'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListeAscendants'
    Arrondissement200:
      description: 'Opération réussie pour l''arrondissement'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Arrondissement'
          examples:
            défaut:
              $ref: '#/components/examples/Arrondissement'
        application/xml:
          schema:
            $ref: '#/components/schemas/Arrondissement'
          examples:
            défaut:
              $ref: '#/components/examples/Arrondissement'
    ArrondissementListeDescendants200:
      description: 'Opération réussie pour les descendants d''un arrondissement'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListeDescendants'
    ArrondissementsListe200:
      description: 'Opération réussie pour la liste des arrondissements'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeArrondissements'
          examples:
            défaut:
              $ref: '#/components/examples/ListeArrondissements'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeArrondissements'
          examples:
            défaut:
              $ref: '#/components/examples/ListeArrondissements'
    ArrondissementListePrecedents200:
      description: 'Opération réussie pour les arrondissements précédents'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListePrecedents'
    ArrondissementListeSuivants200:
      description: 'Opération réussie pour les successeurs d''un arrondissement'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementListeSuivants'
    
    ArrondissementMunicipalListeAscendants200:
      description: 'Opération réussie pour les ascendants d''un arrondissement municipal'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipalListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipalListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipalListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipalListeAscendants'
    ArrondissementMunicipal200:
      description: 'Opération réussie pour l''arrondissement municipal'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipal'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipal'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipal'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipal'
    ArrondissementsMunicipauxListe200:
      description: 'Opération réussie pour les arrondissements municipaux'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeArrondissementsMunicipaux'
          examples:
            défaut:
              $ref: '#/components/examples/ListeArrondissementsMunicipaux'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeArrondissementsMunicipaux'
          examples:
            défaut:
              $ref: '#/components/examples/ListeArrondissementsMunicipaux'
    ArrondissementMunicipalListePrecedents200:
      description: 'Opération réussie pour les arrondissements municipaux précédents'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipalListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipalListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipalListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipalListePrecedents'
    ArrondissementMunicipalListeSuivants200:
      description: 'Opération réussie pour les successeurs d''un arrondissement municipal'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipalListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipalListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/ArrondissementMunicipalListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/ArrondissementMunicipalListeSuivants'
    
    BassinDeVie200:
      description: 'Opération réussie pour le bassin de vie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BassinDeVie2022'
          examples:
            défaut:
              $ref: '#/components/examples/BassinDeVie2022'
        application/xml:
          schema:
            $ref: '#/components/schemas/BassinDeVie2022'
          examples:
            défaut:
              $ref: '#/components/examples/BassinDeVie2022'
    BassinDeVieListeDescendants200:
      description: 'Opération réussie pour les descendants d''un bassin de vie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BassinDeVieListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/BassinDeVieListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/BassinDeVieListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/BassinDeVieListeDescendants'
    BassinsDeVieListe200:
      description: 'Opération réussie pour les bassins de vie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeBassinsDeVie'
          examples:
            défaut:
              $ref: '#/components/examples/ListeBassinsDeVie'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeBassinsDeVie'
          examples:
            défaut:
              $ref: '#/components/examples/ListeBassinsDeVie'

    CantonListeAscendants200:
      description: 'Opération réussie pour les ascendants d''un canton'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonListeAscendants'
    Canton200:
      description: 'Opération réussie pour le canton'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Canton'
          examples:
            défaut:
              $ref: '#/components/examples/Canton'
        application/xml:
          schema:
            $ref: '#/components/schemas/Canton'
          examples:
            défaut:
              $ref: '#/components/examples/Canton'
    CantonsListe200:
      description: 'Opération réussie pour les cantons'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeCantons'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCantons'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeCantons'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCantons'
    CantonListePrecedents200:
      description: 'Opération réussie pour les cantons précédents'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CantonListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CantonListePrecedents'
    CantonListeSuivants200:
      description: 'Opération réussie pour les successeurs d''un canton'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonListeSuivants'
    
    CantonOuVilleListeAscendants200:
      description: 'Opération réussie pour les ascendants d''un canton-ou-ville'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListeAscendants'
    CantonOuVille200:
      description: 'Opération réussie pour le canton-ou-ville'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonOuVille'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVille'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonOuVille'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVille'
    CantonOuVilleListeDescendants200:
      description: 'Opération réussie pour les descendants d''un canton-ou-ville'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListeDescendants'
    CantonsEtVilles200:
      description: 'Opération réussie pour les cantons et villes'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeCantonsEtVilles'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCantonsEtVilles'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeCantonsEtVilles'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCantonsEtVilles'
    CantonOuVilleListePrecedents200:
      description: 'Opération réussie pour les cantons-ou-villes précédents'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListePrecedents'
    CantonOuVilleListeSuivants200:
      description: 'Opération réussie pour les successeurs d''un canton-ou-ville'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CantonOuVilleListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CantonOuVilleListeSuivants'
    
    CirconscriptionTerritorialeListeAscendants200:
      description: 'Opération réussie pour les ascendants d''une circonscription territoriale'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CirconscriptionTerritorialeListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CirconscriptionTerritorialeListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CirconscriptionTerritorialeListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CirconscriptionTerritorialeListeAscendants'

    CirconscriptionTerritoriale200:
      description: 'Opération réussie pour la circonscription territoriale'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CirconscriptionTerritoriale'
          examples:
            défaut:
              $ref: '#/components/examples/CirconscriptionTerritoriale'
        application/xml:
          schema:
            $ref: '#/components/schemas/CirconscriptionTerritoriale'
          examples:
            défaut:
              $ref: '#/components/examples/CirconscriptionTerritoriale'

    CollectiviteDOutreMer200:
      description: 'Opération réussie pour la collectivité d''outre-mer'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectiviteDOutreMer'
          examples:
            défaut:
              $ref: '#/components/examples/CollectiviteDOutreMer'
        application/xml:
          schema:
            $ref: '#/components/schemas/CollectiviteDOutreMer'
          examples:
            défaut:
              $ref: '#/components/examples/CollectiviteDOutreMer'
    CollectiviteDOutreMerListeDescendants200:
      description: 'Opération réussie pour les descendants d''une collectivité d''outre-mer'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectiviteDOutreMerListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CollectiviteDOutreMerListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CollectiviteDOutreMerListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CollectiviteDOutreMerListeDescendants'
    CollectivitesDOutreMerListe200:
      description: 'Opération réussie pour les collectivités d''outre-mer'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeCollectivitesDOutreMer'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCollectivitesDOutreMer'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeCollectivitesDOutreMer'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCollectivitesDOutreMer'

    CommunesListe200:
      description: 'Opération réussie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommunesListe'
          examples:
            défaut:
              $ref: '#/components/examples/CommunesListe'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommunesListe'
          examples:
            défaut:
              $ref: '#/components/examples/CommunesListe'
    Commune200:
      description: 'Opération réussie'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Commune'
          examples:
            défaut:
              $ref: '#/components/examples/Commune'
        application/xml:
          schema:
            $ref: '#/components/schemas/Commune'
          examples:
            défaut:
              $ref: '#/components/examples/Commune'
    CommuneListePrecedents200:
      description: 'Opération réussie pour les communes précédentes'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListePrecedents'
    CommuneListeProjetes200:
      description: 'Opération réussie pour les projetés d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeProjetes'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeProjetes'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeProjetes'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeProjetes'
    CommuneListeSuivants200:
      description: 'Opération réussie pour les successeurs d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeSuivants'
    CommuneListeDescendants200:
      description: 'Opération réussie pour les descendants d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeDescendants'

    CommuneListeAscendants200:
      description: 'Opération réussie pour les ascendants d''une commune'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneListeAscendants'

    CommuneAssocieeListeAscendants200:
      description: 'Opération réussie pour les ascendants d''une commune associée'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneAssocieeListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneAssocieeListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneAssocieeListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneAssocieeListeAscendants'
    CommuneAssociee200:
      description: 'Opération réussie pour la commune associée'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneAssociee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneAssociee'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneAssociee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneAssociee'
    CommunesAssocieesListe200:
      description: 'Opération réussie pour les communes associées'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeCommunesAssociees'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCommunesAssociees'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeCommunesAssociees'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCommunesAssociees'

    CommuneDelegueeListeAscendants200:
      description: 'Opération réussie pour les ascendants d''une commune déléguée'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneDelegueeListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneDelegueeListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneDelegueeListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneDelegueeListeAscendants'
    CommuneDeleguee200:
      description: 'Opération réussie pour la commune déléguée'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommuneDeleguee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneDeleguee'
        application/xml:
          schema:
            $ref: '#/components/schemas/CommuneDeleguee'
          examples:
            défaut:
              $ref: '#/components/examples/CommuneDeleguee'
    CommunesDelegueesListe200:
      description: 'Opération réussie pour les communes déléguées'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeCommunesDeleguees'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCommunesDeleguees'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeCommunesDeleguees'
          examples:
            défaut:
              $ref: '#/components/examples/ListeCommunesDeleguees'

    DepartementListeSuivants200:
      description: 'Opération réussie pour les successeurs d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeSuivantsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeSuivantsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeSuivants'
    DepartementListeProjetes200:
      description: 'Opération réussie pour les projetés d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeProjetesAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeProjetes'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeProjetesAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeProjetes'
    DepartementListePrecedents200:
      description: 'Opération réussie pour les départements précédents'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListePrecedentsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListePrecedentsAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListePrecedents'
    DepartementListeDescendants200:
      description: 'Opération réussie pour les descendants d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeDescendants'
    DepartementListeAscendants200:
      description: 'Opération réussie pour les ascendants d''un département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartementListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/DepartementListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementListeAscendants'
    DepartementsListe200:
      description: 'Opération réussie pour la liste des départements'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeTerritoiresAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementsListe'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeTerritoiresAvecChefLieu'
          examples:
            défaut:
              $ref: '#/components/examples/DepartementsListe'
    Departement200:
      description: 'Opération réussie pour le département'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Departement'
          examples:
            défaut:
              $ref: '#/components/examples/Departement'
        application/xml:
          schema:
            $ref: '#/components/schemas/Departement'
          examples:
            défaut:
              $ref: '#/components/examples/Departement'

    DistrictListeAscendants200:
      description: 'Opération réussie pour les ascendants d''un district'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DistrictListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/DistrictListeAscendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/DistrictListeAscendants'
          examples:
            défaut:
              $ref: '#/components/examples/DistrictListeAscendants'
    District200:
      description: 'Opération réussie pour le district'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/District'
          examples:
            défaut:
              $ref: '#/components/examples/District'
        application/xml:
          schema:
            $ref: '#/components/schemas/District'
          examples:
            défaut:
              $ref: '#/components/examples/District'

    Intercommunalite200:
      description: 'Opération réussie pour l''intercommunalité'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Intercommunalite'
          examples:
            défaut:
              $ref: '#/components/examples/Intercommunalite'
        application/xml:
          schema:
            $ref: '#/components/schemas/Intercommunalite'
          examples:
            défaut:
              $ref: '#/components/examples/Intercommunalite'
    IntercommunaliteListeDescendants200:
      description: 'Opération réussie pour les descendants d''une intercommunalite'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IntercommunaliteListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/IntercommunaliteListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/IntercommunaliteListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/IntercommunaliteListeDescendants'
    IntercommunalitesListe200:
      description: 'Opération réussie pour les intercommunalités'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeIntercommunalites'
          examples:
            défaut:
              $ref: '#/components/examples/ListeIntercommunalites'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeIntercommunalites'
          examples:
            défaut:
              $ref: '#/components/examples/ListeIntercommunalites'
    IntercommunaliteListePrecedents200:
      description: 'Opération réussie pour les intercommunalités précédentes'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IntercommunaliteListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/IntercommunaliteListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/IntercommunaliteListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/IntercommunaliteListePrecedents'
    IntercommunaliteListeSuivants200:
      description: 'Opération réussie pour les successeurs d''une intercommunalité'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IntercommunaliteListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/IntercommunaliteListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/IntercommunaliteListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/IntercommunaliteListeSuivants'
    
    Iris200:
      description: 'Opération réussie pour l''Iris'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Iris'
          examples:
            défaut:
              $ref: '#/components/examples/Iris'
        application/xml:
          schema:
            $ref: '#/components/schemas/Iris'
          examples:
            défaut:
              $ref: '#/components/examples/Iris'

    Pays200:
      description: 'Opération réussie pour le pays'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pays'
          examples:
            défaut:
              $ref: '#/components/examples/Pays'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pays'
          examples:
            défaut:
              $ref: '#/components/examples/Pays'
    PaysListeDescendants200:
      description: 'Opération réussie pour les descendants d''un pays'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaysListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/PaysListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListeDescendants'

    PaysListe200:
      description: 'Opération réussie pour la liste des pays'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaysListe'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListe'
        application/xml:
          schema:
            $ref: '#/components/schemas/PaysListe'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListe'
    PaysListePrecedents200:
      description: 'Opération réussie pour les pays précédents'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaysListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/PaysListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListePrecedents'
    PaysListeSuivants200:
      description: 'Opération réussie pour les successeurs d''un pays'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaysListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/PaysListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/PaysListeSuivants'
    
    Region200:
      description: 'Opération réussie pour la région'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
          examples:
            défaut:
              $ref: '#/components/examples/Region'
        application/xml:
          schema:
            $ref: '#/components/schemas/Region'
          examples:
            défaut:
              $ref: '#/components/examples/Region'
    RegionListeDescendants200:
      description: 'Opération réussie pour les descendants d''une région'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegionListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/RegionListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/RegionListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/RegionListeDescendants'
    RegionsListe200:
      description: 'Opération réussie pour les régions'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeRegions'
          examples:
            défaut:
              $ref: '#/components/examples/ListeRegions'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeRegions'
          examples:
            défaut:
              $ref: '#/components/examples/ListeRegions'
    RegionListePrecedents200:
      description: 'Opération réussie pour les régions précédentes'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegionListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/RegionListePrecedents'
        application/xml:
          schema:
            $ref: '#/components/schemas/RegionListePrecedents'
          examples:
            défaut:
              $ref: '#/components/examples/RegionListePrecedents'
    RegionListeSuivants200:
      description: 'Opération réussie pour les successeurs d''une région'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegionListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/RegionListeSuivants'
        application/xml:
          schema:
            $ref: '#/components/schemas/RegionListeSuivants'
          examples:
            défaut:
              $ref: '#/components/examples/RegionListeSuivants'
    
    UniteUrbaine200:
      description: 'Opération réussie pour l''unité urbaine'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniteUrbaine2020'
          examples:
            défaut:
              $ref: '#/components/examples/UniteUrbaine2020'
        application/xml:
          schema:
            $ref: '#/components/schemas/UniteUrbaine2020'
          examples:
            défaut:
              $ref: '#/components/examples/UniteUrbaine2020'
    UniteUrbaineListeDescendants200:
      description: 'Opération réussie pour les descendants d''une unité urbaine'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniteUrbaineListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/UniteUrbaineListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/UniteUrbaineListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/UniteUrbaineListeDescendants'
    UnitesUrbainesListe200:
      description: 'Opération réussie pour les unités urbaines'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeUnitesUrbaines'
          examples:
            défaut:
              $ref: '#/components/examples/ListeUnitesUrbaines'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeUnitesUrbaines'
          examples:
            défaut:
              $ref: '#/components/examples/ListeUnitesUrbaines'


    ZoneDEmploi200:
      description: 'Opération réussie pour la zone d''emploi'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ZoneDEmploi2020'
          examples:
            défaut:
              $ref: '#/components/examples/ZoneDEmploi2020'
        application/xml:
          schema:
            $ref: '#/components/schemas/ZoneDEmploi2020'
          examples:
            défaut:
              $ref: '#/components/examples/ZoneDEmploi2020'
    ZoneDEmploiListeDescendants200:
      description: 'Opération réussie pour les descendants d''une zone d''emploi'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ZoneDEmploiListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/ZoneDEmploiListeDescendants'
        application/xml:
          schema:
            $ref: '#/components/schemas/ZoneDEmploiListeDescendants'
          examples:
            défaut:
              $ref: '#/components/examples/ZoneDEmploiListeDescendants'
    ZonesDEmploiListe200:
      description: 'Opération réussie pour les zones d''emploi'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListeZonesDEmploi2020'
          examples:
            défaut:
              $ref: '#/components/examples/ListeZonesDEmploi2020'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListeZonesDEmploi2020'
          examples:
            défaut:
              $ref: '#/components/examples/ListeZonesDEmploi2020'


  schemas:
    TypeEnumDescendantsAireDAttractionDesVilles:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - ArrondissementMunicipal
      example: 'Commune'
    TypeEnumDescendantsArrondissement:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - ArrondissementMunicipal
      example: 'CommuneDeleguee'
    TypeEnumAscendantsArrondissement:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
        - Departement
      example: 'Region'
    TypeEnumAscendantsArrondissementMunicipal:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
        - Departement
        - Arrondissement
        - Commune
        - AireDAttractionDesVilles2020
        - BassinDeVie2022
        - Canton
        - CantonOuVille
        - Intercommunalite
        - UniteUrbaine2020
        - ZoneDEmploi2020
      example: 'Region'
    TypeEnumAscendantsCanton:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
        - Departement
      example: 'Region'
    TypeEnumAscendantsCantonOuVille:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
        - Departement
      example: 'Region'
    TypeEnumAscendantsCirconscriptionTerritoriale:
      type: string
      xml:
        name: 'Type'
      enum:
        - CollectiviteDOutreMer
      example: 'CollectiviteDOutreMer'
    Commune:
      xml:
        name: Commune
      allOf:
        - $ref: '#/components/schemas/TerritoireBase'
      properties:
        code:
          $ref: '#/components/schemas/CodeCom'
    TypeEnumAscendantsCommuneAssociee:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
        - Departement
        - Arrondissement
        - Commune
      example: 'Region'
    TypeEnumAscendantsCommuneDeleguee:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
        - Departement
        - Arrondissement
        - Commune
      example: 'Region'
    Departement:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Departement
          properties:
            code:
              $ref: '#/components/schemas/CodeDep'
    TerritoireBase:
      required:
        - code
        - uri
        - type
        - dateCreation
        - dateSuppression
        - intituleSansArticle
        - typeArticle
        - intitule
      xml:
        name: TerritoireBase
      properties:
        code:
          type: string
        uri:
          type: string
          pattern: uri
          xml:
            attribute: true
        type:
          type: string
          $ref: '#/components/schemas/TypeEnum'
        dateCreation:
          type: string
          description: 'Date de création du territoire s''il n''existait pas au premier COG du 1er janvier 1943'
          format: date
          xml:
            name: DateCreation
        dateSuppression:
          type: string
          description: 'Date de suppression du territoire'
          format: date
          xml:
            name: DateSuppression
        intituleSansArticle:
          xml:
            name: IntituleSansArticle
          type: string
        typeArticle:
          xml:
            name: TypeArticle
          type: string
          enum:
            - 0:
                article:
                charniere: 'De'
            - 1:
                article:
                charniere: 'D'''
            - 2:
                article: 'Le'
                charniere: 'Du'
            - 3:
                article: 'La'
                charniere: 'De La'
            - 4:
                article: 'Les'
                charniere: 'Des'
            - 5:
                article: 'L'''
                charniere: 'De L'''
            - 6:
                article: 'Aux'
                charniere: 'Des'
            - 7:
                article: 'Las'
                charniere: 'De Las'
            - 8:
                article: 'Los'
                charniere: 'De Los'
            - X:
                article:
                charniere:
        intitule:
          type: string
          xml:
            name: Intitule
    TerritoireBase_ChefLieu:
      xml:
        wrapped: true
        name: TerritoireBase_AvecChefLieu
      allOf:
        - $ref: '#/components/schemas/TerritoireBase'
        - type: object
          required:
            - chefLieu
          properties:
            chefLieu:
              type: string
              description: 'Chef-lieu du territoire'
              xml:
                name: ChefLieu
    Territoire_TousAttributs:
      xml:
        wrapped: true
        name: TerritoireBase_AvecTousLesAttributsPossibles
      allOf:
        - $ref: '#/components/schemas/TerritoireBase'
        - type: object
          required:
            - chefLieu
            - typeDIris
            - categorieJuridique
            - intituleComplet
            - inclusion
          properties:
            chefLieu:
              type: string
              description: 'Chef-lieu du territoire'
              xml:
                name: ChefLieu
            typeDIris:
              type: string
              description: 'Type d''iris'
              xml:
                name: typeDIris
            categorieJuridique:
              type: string
              description: 'Catégorie juridique du territoire'
              xml:
                name: categorieJuridique
            intituleComplet:
              type: string
              description: 'Intitulé complet du territoire'
              xml:
                name: intituleComplet
            inclusion:
              type: string
              description: 'Inclusion'
              xml:
                name: inclusion

    DepartementListeDescendants:
      description: 'Liste des descendants d''un département'
      type: array
      xml:
        wrapped: true
        name: DescendantsDepartement
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    DepartementListeAscendants:
      description: 'Liste des ascendants d''un département'
      type: array
      xml:
        wrapped: true
        name: AscendantsDepartement
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    DepartementListeProjetesAvecChefLieu:
      description: 'Liste des départements projetés'
      type: array
      xml:
        wrapped: true
        name: ListeDepartementsProjetes
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'
    DepartementListePrecedentsAvecChefLieu:
      description: 'Liste des départements précédents'
      type: array
      xml:
        wrapped: true
        name: ListeDepartementsPrecedents
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'
    DepartementListeSuivantsAvecChefLieu:
      description: 'Liste des départements qui succèdent au département'
      type: array
      xml:
        wrapped: true
        name: ListeDepartementsSuivants
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'

    TypeEnumAscendantsDistrict:
      type: string
      xml:
        name: 'Type'
      enum:
        - CollectiviteDOutreMer
      example: 'CollectiviteDOutreMer'

    ListeTerritoiresAvecChefLieu:
      description: 'Liste de territoires décrits avec chef-lieu'
      type: array
      xml:
        wrapped: true
        name: ListeTerritoiresChefLieu
      items:
        $ref: '#/components/schemas/TerritoireBase_ChefLieu'
    TerritoireRef:
      xml:
        name: TerritoireRef
      type: object
      required:
        - code
        - territoireType
      description: 'Références vers un territoire de n''importe quel type'
      properties:
        code:
          type: string
          description: 'Code identifiant un teritoire quelqconque'
        territoireType:
          $ref: '#/components/schemas/TypeEnum'
    CodeCom:
      pattern: '[0-9][0-9AB][0-9]{3}'
      type: 'string'
      xml:
        attribute: true
      example: '14475'
    CodeDep:
      description: 'Code d''un département'
      pattern: '([013-8][0-9])|(2[0-9AB])|(9[0-5])|(97[1-6])'
      type: string
      xml:
        attribute: true
      example: '22'
    CommunesListe:
      description: 'Liste de communes'
      type: array
      xml:
        wrapped: true
        name: Communes
      items:
        $ref: '#/components/schemas/TerritoireBase'
    CommuneListeDescendants:
      description: 'Liste des descendants d''une commune'
      type: array
      xml:
        wrapped: true
        name: DescendantsCommune
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CommuneListeAscendants:
      description: 'Liste des ascendants d''une commune'
      type: array
      xml:
        wrapped: true
        name: AscendantsCommune
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CommuneListePrecedents:
      description: 'Liste des communes précédentes'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesPrecedentes
      items:
        $ref: '#/components/schemas/TerritoireBase'
    CommuneListeProjetes:
      description: 'Liste des communes projetées'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesProjetees
      items:
        $ref: '#/components/schemas/TerritoireBase'
    CommuneListeSuivants:
      description: 'Liste des communes qui succèdent à la commune'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesSuivants
      items:
        $ref: '#/components/schemas/TerritoireBase'
    Date2000ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '2000-01-01'
    Date2020ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '2020-01-01'
    Date1960ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '1960-01-01'
    Date1950ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '1950-01-01'
    Date1945ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '1945-06-26'
    Date1965ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '1965-01-01'
    Date2016ParDefaut:
      description: 'date proposée par défaut'
      type: date
      xml:
        attribute: true
      example: '2016-01-01'
    TypeEnum:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Canton
        - CantonOuVille
        - Arrondissement
        - ArrondissementMunicipal
        - Departement
        - Pays
        - Region
        - Intercommunalite
        - District
        - AireDAttractionDesVilles2020
        - BassinDeVie2022
        - CollectiviteDOutreMer
        - CirconscriptionTerritoriale
        - Iris
        - ZoneDEmploi2020
        - UniteUrbaine2020
        - Territoire
      example: 'Canton'
    TypeEnumDescendantsCollectiviteDOutreMer:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CirconscriptionTerritoriale
        - Iris
        - District
    TypeEnumDescendantsDepartement:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - Arrondissement
        - ArrondissementMunicipal
      example: 'Arrondissement'
    TypeEnumAscendantsDepartement:
      type: string
      xml:
        name: 'Type'
      enum:
        - Region
      example: 'Region'
    TypeEnumDescendantsCommune:
      type: string
      xml:
        name: 'Type'
      enum:
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - ArrondissementMunicipal
      example: 'Arrondissement'
    TypeEnumAscendantsCommune:
      type: string
      xml:
        name: 'Type'
      enum:
        - Departement
        - Region
        - Arrondissement
        - CollectiviteDOutreMer
        - AireDAttractionDesVilles2020
        - BassinDeVie2022
        - Canton
        - CantonOuVille
        - Intercommunalite
        - ZoneDEmploi2020
      example: 'Departement'

    AireDAttractionDesVilles2020:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Aire d'attraction
          properties:
            code:
              $ref: '#/components/schemas/CodeAireDAttractionDesVilles'
    CodeAireDAttractionDesVilles:
      description: 'Code d''une aire d''attraction'
      pattern: '[a-zA-Z0-9]{3}'
      type: string
      xml:
        attribute: true
      example: '062'
    AireDAttractionDesVillesListeDescendants:
      description: 'Liste des descendants d''une aire d''attraction des villes'
      type: array
      xml:
        wrapped: true
        name: DescendantsAireDAttractionDesVilles
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ListeAiresDAttractionDesVilles2020:
      description: 'Liste des aires d''attraction des villes'
      type: array
      xml:
        wrapped: true
        name: ListeAiresDAttractionDesVilles2020
      items:
        $ref: '#/components/schemas/AireDAttractionDesVilles2020'

    ArrondissementListeAscendants:
      description: 'Liste des ascendants d''un arrondissement'
      type: array
      xml:
        wrapped: true
        name: AscendantsArrondissement
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'

    Arrondissement:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Arrondissement
          properties:
            code:
              $ref: '#/components/schemas/CodeArrondissement'
    CodeArrondissement:
      description: 'Code d''un arrondissement'
      pattern: '[a-zA-Z0-9]{3,4}'
      type: string
      xml:
        attribute: true
      example: '674'
    ArrondissementListeDescendants:
      description: 'Liste des descendants d''un arrondissement'
      type: array
      xml:
        wrapped: true
        name: DescendantsArrondissement
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ListeArrondissements:
      description: 'Liste des arrondissements'
      type: array
      xml:
        wrapped: true
        name: ListeArrondissements
      items:
        $ref: '#/components/schemas/Arrondissement'
    ArrondissementListePrecedents:
      description: 'Liste des arrondissements précédents'
      type: array
      xml:
        wrapped: true
        name: ListeArrondissementsPrecedents
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CodeArrondissementSuivant:
      description: 'Code d''un arrondissement'
      pattern: '[a-zA-Z0-9]{3,4}'
      type: string
      xml:
        attribute: true
      example: '042'
    ArrondissementListeSuivants:
      description: 'Liste des arrondissements qui succèdent à l''arrondissement'
      type: array
      xml:
        wrapped: true
        name: ListeArrondissementsSuivants
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    
    ArrondissementMunicipalListeAscendants:
      description: 'Liste des ascendants d''un arrondissement municipal'
      type: array
      xml:
        wrapped: true
        name: AscendantsArrondissementMunicipal
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ArrondissementMunicipal:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Arrondissement municipal
          properties:
            code:
              $ref: '#/components/schemas/CodeArrondissementMunicipal'
    CodeArrondissementMunicipal:
      description: 'Code d''un arrondissement municipal'
      pattern: '[a-zA-Z0-9]{5}'
      type: string
      xml:
        attribute: true
      example: '69385'
    ListeArrondissementsMunicipaux:
      description: 'Liste des arrondissements municipaux'
      type: array
      xml:
        wrapped: true
        name: ListeArrondissementsMunicipaux
      items:
        $ref: '#/components/schemas/ArrondissementMunicipal'
    ArrondissementMunicipalListePrecedents:
      description: 'Liste des arrondissements municipaux précédents'
      type: array
      xml:
        wrapped: true
        name: ListeArrondissementsMunicipauxPrecedents
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ArrondissementMunicipalListeSuivants:
      description: 'Liste des arrondissements municipaux qui succèdent à l''arrondissement municipal'
      type: array
      xml:
        wrapped: true
        name: ListeArrondissementsMunicipauxSuivants
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    
    CommuneAssocieeListeAscendants:
      description: 'Liste des ascendants d''une commune associée'
      type: array
      xml:
        wrapped: true
        name: AscendantsCommuneAssociee
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CommuneAssociee:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: CommuneAssociee
          properties:
            code:
              $ref: '#/components/schemas/CodeCommuneAssociee'
    ListeCommunesAssociees:
      description: 'Liste des communes associées'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesAssociees
      items:
        $ref: '#/components/schemas/CommuneAssociee'

    CommuneDelegueeListeAscendants:
      description: 'Liste des ascendants d''une commune déléguée'
      type: array
      xml:
        wrapped: true
        name: AscendantsCommuneDeleguee
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CommuneDeleguee:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: CommuneDeleguee
          properties:
            code:
              $ref: '#/components/schemas/CodeCommuneDeleguee'
    ListeCommunesDeleguees:
      description: 'Liste des communes déléguées'
      type: array
      xml:
        wrapped: true
        name: ListeCommunesDeleguees
      items:
        $ref: '#/components/schemas/CommuneDeleguee'

    CodeCommuneAssociee:
      description: 'Code de la commune associée'
      pattern: '([0-9]{5})'
      type: string
      xml:
        attribute: true
      example: '14463'

    CodeCommuneDeleguee:
      description: 'Code de la commune déléguée'
      pattern: '([0-9]{5})'
      type: string
      xml:
        attribute: true
      example: '46248'

    DistrictListeAscendants:
      description: 'Liste des ascendants d''un district'
      type: array
      xml:
        wrapped: true
        name: AscendantsDistrict
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    District:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: District
          properties:
            code:
              $ref: '#/components/schemas/CodeDistrict'
    CodeDistrict:
      description: 'Code du district'
      pattern: '([0-9]{5})'
      type: string
      xml:
        attribute: true
      example: '98411'

    Intercommunalite:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Intercommunalite
          properties:
            code:
              $ref: '#/components/schemas/CodeInterco'
    CodeInterco:
      description: 'Code d''une intercommunalité'
      pattern: '([0-9]{9})'
      type: string
      xml:
        attribute: true
      example: '240100883'
    TypeEnumDescendantsIntercommunalite:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - ArrondissementMunicipal
      example: 'Arrondissement'
    IntercommunaliteListeDescendants:
      description: 'Liste des descendants d''une intercommunalité'
      type: array
      xml:
        wrapped: true
        name: DescendantsIntercommunalite
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ListeIntercommunalites:
      description: 'Liste des intercommunalités'
      type: array
      xml:
        wrapped: true
        name: ListeIntercommunalites
      items:
        $ref: '#/components/schemas/Intercommunalite'
    IntercommunaliteListePrecedents:
      description: 'Liste des intercommunalités précédentes'
      type: array
      xml:
        wrapped: true
        name: ListeIntercommunalitesPrecedents
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    IntercommunaliteListeSuivants:
      description: 'Liste des intercommunalités qui succèdent à l''intercommunalité'
      type: array
      xml:
        wrapped: true
        name: ListeIntercommunalitesSuivants
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    
    CodeIris:
      description: 'Code d''une Iris'
      pattern: '([0-9]{9})'
      type: string
      xml:
        attribute: true
      example: '010040101'

    Iris:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Iris
          properties:
            code:
              $ref: '#/components/schemas/CodeIris'

    Pays:
      xml:
        wrapped: true
        name: Pays
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
        - type: object
          required:
            - iso3166alpha2
            - iso3166alpha3
            - iso3166num
          properties:
            iso3166alpha2:
              type: string
              description: 'Code ISO 3166-1 alpha-2 du pays'
              xml:
                name: Iso3166alpha2
            iso3166alpha3:
              type: string
              description: 'Code ISO 3166-1 alpha-3 du pays'
              xml:
                name: Iso3166alpha3
            iso3166num:
              type: string
              description: 'Code ISO 3166-1 numérique du pays'
              xml:
                name: Iso3166num
            code:
              $ref: '#/components/schemas/CodePays'
    CodePays:
      description: 'Code d''un pays'
      pattern: '^99[0-9]{3}$'
      type: string
      xml:
        attribute: true
      example: '99132'
    PaysListeDescendants:
      description: 'Liste des descendants d''un pays'
      type: array
      xml:
        wrapped: true
        name: DescendantsPays
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    PaysListe:
      description: 'Liste des pays'
      type: array
      xml:
        wrapped: true
        name: ListePays
      items:
        $ref: '#/components/schemas/Pays'
    CodePaysPrec:
      description: 'Code d''un pays'
      pattern: '^99[0-9]{3}$'
      type: string
      xml:
        attribute: true
      example: '99309'
    PaysListePrecedents:
      description: 'Liste des pays précédents'
      type: array
      xml:
        wrapped: true
        name: ListePaysPrecedents
      items:
        $ref: '#/components/schemas/Pays'
    CodePaysSuivant:
      description: 'Code d''un pays'
      pattern: '^99[0-9]{3}$'
      type: string
      xml:
        attribute: true
      example: '99121'
    PaysListeSuivants:
      description: 'Liste des pays qui succèdent au pays'
      type: array
      xml:
        wrapped: true
        name: ListePaysSuivants
      items:
        $ref: '#/components/schemas/Pays'
    
    Region:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Region
          properties:
            code:
              $ref: '#/components/schemas/CodeReg'
    CodeReg:
      description: 'Code d''une région'
      pattern: '^(01|02|03|04|06|11|24|27|28|32|44|52|53|75|76|84|93|94)$'
      type: string
      xml:
        attribute: true
      example: '06'
    RegionListeDescendants:
      description: 'Liste des descendants d''une région'
      type: array
      xml:
        wrapped: true
        name: DescendantsRegion
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ListeRegions:
      description: 'Liste des régions'
      type: array
      xml:
        wrapped: true
        name: ListeRegions
      items:
        $ref: '#/components/schemas/Region'
    CodeRegPrec:
      description: 'Code d''une région'
      pattern: '^(01|02|03|04|06|11|24|27|28|32|44|52|53|75|76|84|93|94)$'
      type: string
      xml:
        attribute: true
      example: '44'
    RegionListePrecedents:
      description: 'Liste des régions précédentes'
      type: array
      xml:
        wrapped: true
        name: ListeRegionsPrecedentes
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CodeRegSuivant:
      description: 'Code d''une région'
      pattern: '^[0-9]{2}$'
      type: string
      xml:
        attribute: true
      example: '41'
    RegionListeSuivants:
      description: 'Liste des régions qui succèdent à la région'
      type: array
      xml:
        wrapped: true
        name: ListeRegionSuivants
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'

    UniteUrbaine2020:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: UniteUrbaine
          properties:
            code:
              $ref: '#/components/schemas/CodeUniteUrbaine'
    CodeUniteUrbaine:
      description: 'Code d''une unité urbaine'
      pattern: '^([0-9][0-9A-Z][0-9]{3})$'
      type: string
      xml:
        attribute: true
      example: '01121'
    UniteUrbaineListeDescendants:
      description: 'Liste des descendants d''une unité urbaine'
      type: array
      xml:
        wrapped: true
        name: DescendantsUniteUrbaine
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    TypeEnumDescendantsUniteUrbaine:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - Arrondissement
        - ArrondissementMunicipal
      example: 'Commune'
    ListeUnitesUrbaines:
      description: 'Liste des unités urbaines'
      type: array
      xml:
        wrapped: true
        name: ListeUnitesUrbaines
      items:
        $ref: '#/components/schemas/UniteUrbaine2020'

    BassinDeVie2022:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Canton
          properties:
            code:
              $ref: '#/components/schemas/CodeBassinDeVie'
    CodeBassinDeVie:
      description: 'Code d''un bassin de vie'
      pattern: '[a-zA-Z0-9]{5}'
      type: string
      xml:
        attribute: true
      example: '01004'
    TypeEnumDescendantsBassinDeVie:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - ArrondissementMunicipal
      example: 'Commune'
    BassinDeVieListeDescendants:
      description: 'Liste des descendants d''un bassin de vie'
      type: array
      xml:
        wrapped: true
        name: DescendantsBassinDeVie
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ListeBassinsDeVie:
      description: 'Liste des bassins de vie'
      type: array
      xml:
        wrapped: true
        name: ListeBassinsDeVie
      items:
        $ref: '#/components/schemas/BassinDeVie2022'

    CantonListeAscendants:
      description: 'Liste des ascendants d''un canton'
      type: array
      xml:
        wrapped: true
        name: AscendantsCanton
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    Canton:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Canton
          properties:
            code:
              $ref: '#/components/schemas/CodeCanton'
    CodeCanton:
      description: 'Code d''un canton'
      pattern: '[0-9]{4}|[0-9]{5}|2[ABab][0-9]{2}'
      type: string
      xml:
        attribute: true
      example: '0101'
    ListeCantons:
      description: 'Liste des cantons'
      type: array
      xml:
        wrapped: true
        name: ListeCantons
      items:
        $ref: '#/components/schemas/Canton'
    CodeCantonPrec:
      description: 'Code d''un canton'
      pattern: '[0-9]{4}|[0-9]{5}|2[ABab][0-9]{2}'
      type: string
      xml:
        attribute: true
      example: '0103'
    CantonListePrecedents:
      description: 'Liste des cantons précédents'
      type: array
      xml:
        wrapped: true
        name: ListeCantonsPrecedents
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CantonListeSuivants:
      description: 'Liste des cantons qui succèdent au canton'
      type: array
      xml:
        wrapped: true
        name: ListeCantonsSuivants
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    
    CantonOuVilleListeAscendants:
      description: 'Liste des ascendants d''un canton-ou-ville'
      type: array
      xml:
        wrapped: true
        name: AscendantsCantonOuVille
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CantonOuVilleListeDescendants:
      description: 'Liste des descendants d''un canton-ou-ville'
      type: array
      xml:
        wrapped: true
        name: DescendantsCantonOuVille
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CantonOuVille:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: Canton
          properties:
            code:
              $ref: '#/components/schemas/CodeCantonOuVille'
    CodeCantonOuVille:
      description: 'Code d''un canton-ou-ville'
      pattern: '[0-9]{4,5}'
      type: string
      xml:
        attribute: true
      example: '0101'
    TypeEnumDescendantsCantonOuVille:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - Iris
      example: 'Commune'
    ListeCantonsEtVilles:
      description: 'Liste des cantons et villes'
      type: array
      xml:
        wrapped: true
        name: ListeCantonsEtVilles
      items:
        $ref: '#/components/schemas/CantonOuVille'
    CodeCantonOuVillePrec:
      description: 'Code d''un canton-ou-ville'
      pattern: '[0-9]{4,5}'
      type: string
      xml:
        attribute: true
      example: '0104'
    CantonOuVilleListePrecedents:
      description: 'Liste des cantons-ou-villes précédents'
      type: array
      xml:
        wrapped: true
        name: ListeCantonsOuVillesPrecedents
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CodeCantonOuVilleSuivants:
      description: 'Code d''un canton-ou-ville'
      pattern: '[0-9]{4,5}'
      type: string
      xml:
        attribute: true
      example: '0103'
    CantonOuVilleListeSuivants:
      description: 'Liste des cantons-ou-villes qui succèdent au canton-ou-ville'
      type: array
      xml:
        wrapped: true
        name: ListeCantonsOuVillesSuivants
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    
    CirconscriptionTerritorialeListeAscendants:
      description: 'Liste des ascendants d''une circonscription territoriale'
      type: array
      xml:
        wrapped: true
        name: AscendantsCirconscriptionTerritoriale
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    CirconscriptionTerritoriale:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: Circonscription territoriale
          properties:
            code:
              $ref: '#/components/schemas/CodeCirconscriptionTerritoriale'
    CodeCirconscriptionTerritoriale:
      description: 'Code d''une circonscription territoriale'
      pattern: '[a-zA-Z0-9]{5}'
      type: string
      xml:
        attribute: true
      example: '98611'

    CollectiviteDOutreMer:
      allOf:
        - $ref: '#/components/schemas/Territoire_TousAttributs'
          xml:
            name: CollectiviteDOutreMer
          properties:
            code:
              $ref: '#/components/schemas/CodeCollectiviteDOutreMer'
    CodeCollectiviteDOutreMer:
      description: 'Code d''une collectivité d''outre-mer'
      pattern: '[a-zA-Z0-9]{3}'
      type: string
      xml:
        attribute: true
      example: '988'
    CollectiviteDOutreMerListeDescendants:
      description: 'Liste des descendants d''une collectivité d''outre-mer'
      type: array
      xml:
        wrapped: true
        name: DescendantsCollectiviteDOutreMer
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ListeCollectivitesDOutreMer:
      description: 'Liste des collectivités d''outre-mer'
      type: array
      xml:
        wrapped: true
        name: ListeCollectivitesDOutreMer
      items:
        $ref: '#/components/schemas/CollectiviteDOutreMer'

    TypeEnumDescendantsPays:
      type: string
      xml:
        name: 'Type'
      enum:
        - Territoire
      example: 'Territoire'
    TypeEnumDescendantsRegion:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - Arrondissement
        - ArrondissementMunicipal
        - Departement
        - Canton
        - CantonOuVille
      example: 'Commune'
    TypeEnumDescendantsZoneDEmploi:
      type: string
      xml:
        name: 'Type'
      enum:
        - Commune
        - CommuneAssociee
        - CommuneDeleguee
        - Iris
        - Arrondissement
        - ArrondissementMunicipal

    ZoneDEmploi2020:
      allOf:
        - $ref: '#/components/schemas/TerritoireBase_ChefLieu'
          xml:
            name: ZoneDEmploi
          properties:
            code:
              $ref: '#/components/schemas/CodeZoneDEmploi'
    CodeZoneDEmploi:
      description: 'Code d''une zone d''emploi'
      pattern: '[0-9]{4}'
      type: string
      xml:
        attribute: true
      example: '2415'
    ZoneDEmploiListeDescendants:
      description: 'Liste des descendants d''une zone d''emploi'
      type: array
      xml:
        wrapped: true
        name: DescendantsZoneDEmploi
      items:
        $ref: '#/components/schemas/Territoire_TousAttributs'
    ListeZonesDEmploi2020:
      description: 'Liste des zones d''emploi'
      type: array
      xml:
        wrapped: true
        name: ListeZonesDEmploi
      items:
        $ref: '#/components/schemas/ZoneDEmploi2020'